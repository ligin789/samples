import moment from"moment";import GateLabel from"../../../atoms/gateLabel";import HorizontalSlot from"../../../atoms/horizontalSlot";import Constants from"../../../globals/Constants";import Styles from"./Styles";import FlightSlot from"../../../atoms/horizontalSlot/flightSlot";import e from"express";const GanttShowView=(props:any)=>{const{interval,startTime,hours,hoursSet,ganttViewData,selectedTimeLineValue,otherStartTime,newGanttData,selectedFlight}=props;let otherEndTime=moment(otherStartTime).add(Number(selectedTimeLineValue.endTime+selectedTimeLineValue.startTime),'minutes').format('YYYY-MM-DDTHH:mm:SS');console.log("otherEndTime otherEndTime =>",otherEndTime,otherStartTime,newGanttData,ganttViewData);let otherCurrentTime=moment(otherStartTime).add(Number(selectedTimeLineValue.startTime),'minutes').format('YYYY-MM-DDTHH:mm:SS');const part=selectedTimeLineValue.endTime+selectedTimeLineValue.startTime;let counter=Number(startTime.substring(0,2))*60+Number(startTime.substring(3,5));console.log("selectedTimeLineValue",selectedTimeLineValue);for(let i=0;i<part;i++){counter=counter+1}let h=Math.floor(counter/60).toString().length<2?`0${Math.floor(counter/60)}`:`${Math.floor(counter/60)}`;let m=(counter%60).toString().length<2?`0${counter%60}`:`${counter%60}`;let endTime=`${h}:${m}`;let gateData=ganttViewData;let finalGateData:any[]=[];false&&gateData?.map((list:any,i:number)=>{let data:any[]=[];console.log("check gateDetails length ===>",list,list?.gateDetails.length);if(list?.gateDetails?.length>0){list?.gateDetails.sort((a:any,b:any)=>a.start.localeCompare(b.start))?.map((el:any,index:number)=>{if(Date.UTC(0,0,0,Number(endTime?.substring(0,2)),Number(endTime?.substring(3,5)))>Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))){if(data.length>1){if(Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))>Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))){let temp1={stamp:0,slot:false};temp1.stamp=(Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(list?.gateDetails[index-1].end?.split("T")[1].substring(0,2)),Number(list?.gateDetails[index-1].end?.split("T")[1].substring(3,5))))/60000;data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,overFlow:"E",isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5))))/60000;temp2.slot=true;console.log("finalGateDatalist",temp2);data.push(temp2)}else{let temp1={stamp:0,slot:false};temp1.stamp=(Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(list?.gateDetails[index-1].end?.split("T")[1].substring(0,2)),Number(list?.gateDetails[index-1].end?.split("T")[1].substring(3,5))))/60000;data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5))))/60000;temp2.slot=true;data.push(temp2);}if(index===list?.gateDetails.length-1&&Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))<Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))){let temp={stamp:0,slot:false};temp.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5))))/60000;data.push(temp)}}else{if(Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5)))<Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))&&Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))>Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))){let temp1={stamp:0,slot:false};temp1.stamp=(Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5))))/60000;data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,overFlow:"E",isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5))))/60000;temp2.slot=true;console.log("finalGateDatalist",temp2);data.push(temp2)}else{if(Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5)))<Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))){let temp1={stamp:0,slot:false};temp1.stamp=(Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5))))/60000;data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5))))/60000;temp2.slot=true;data.push(temp2)}if(Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5)))>Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))){if(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))>Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))){let temp1={stamp:0,slot:false};data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,overFlow:"S",isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5))))/60000;temp2.slot=true;data.push(temp2)}else{let temp1={stamp:0,slot:false};data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,overFlow:"S",isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5))))/60000;temp2.slot=true;data.push(temp2)}}if(Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5)))===Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))){if(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))>Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))){let temp1={stamp:0,slot:false};data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5))))/60000;temp2.slot=true;data.push(temp2)}else{let temp1={stamp:0,slot:false};data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,overFlow:"E",isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5))))/60000;temp2.slot=true;data.push(temp2)}}}if(index===list?.gateDetails.length-1&&Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))<Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))){let temp={stamp:0,slot:false};temp.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5))))/60000;data.push(temp)}}}else{console.log("check finalGateData ===>1 ",list.gate,index);if(index>0&&list?.gateDetails[index-1]&&Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))>Date.UTC(0,0,0,Number(list?.gateDetails[index-1].end?.split("T")[1].substring(0,2)),Number(list?.gateDetails[index-1].end?.split("T")[1].substring(3,5)))){let temp={stamp:0,slot:false};temp.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(list?.gateDetails[index-1].end?.split("T")[1].substring(0,2)),Number(list?.gateDetails[index-1].end?.split("T")[1].substring(3,5))))/60000;data.push(temp)}else{if(data.length===0){let temp={stamp:0,slot:false};temp.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5))))/60000;data.push(temp)}}}console.log("finalGateDatalist",data)})}else{let temp={stamp:0,slot:false};temp.stamp=part;data.push(temp)}finalGateData.push({gate:list.gate,data:data,isConflict:list?.gateDetails?.[0]?.isConflict==="Y"?list?.gateDetails?.[0]?.isConflict:"N"})});console.log("finalGateDatalist",finalGateData);console.log('check the newGanttData newGanttData => ',newGanttData);let gateDataOther=newGanttData;let finalGateDataOther:any[]=[];false&&gateDataOther?.map((list:any,i:number)=>{let data:any[]=[];let dataConfig:any[]=[];console.log("check gateDetails length ===>",list,list?.gateDetails.length);if(list?.gateDetails?.length>0){list?.gateDetails?.map((el:any,index:number)=>{if(Date.UTC(0,0,0,Number(endTime?.substring(0,2)),Number(endTime?.substring(3,5)))>Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))){if(data.length>1){if(Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))>Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))){let temp1={stamp:0,slot:false};temp1.stamp=(Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(list?.gateDetails[index-1].end?.split("T")[1].substring(0,2)),Number(list?.gateDetails[index-1].end?.split("T")[1].substring(3,5))))/60000;data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,overFlow:"E",isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5))))/60000;temp2.slot=true;console.log("finalGateDatalist",temp2);data.push(temp2)}else{let temp1={stamp:0,slot:false};temp1.stamp=(Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(list?.gateDetails[index-1].end?.split("T")[1].substring(0,2)),Number(list?.gateDetails[index-1].end?.split("T")[1].substring(3,5))))/60000;data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5))))/60000;temp2.slot=true;data.push(temp2)}if(index===list?.gateDetails.length-1&&Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))<Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))){let temp={stamp:0,slot:false};temp.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5))))/60000;data.push(temp)}}else{if(Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5)))<Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))&&Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))>Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))){let temp1={stamp:0,slot:false};temp1.stamp=(Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5))))/60000;data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,overFlow:"E",isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5))))/60000;temp2.slot=true;console.log("finalGateDatalist",temp2);data.push(temp2)}else{if(Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5)))<Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))){let temp1={stamp:0,slot:false};temp1.stamp=(Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5))))/60000;data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5))))/60000;temp2.slot=true;data.push(temp2)}if(Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5)))>Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))){if(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))>Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))){let temp1={stamp:0,slot:false};data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,overFlow:"S",isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5))))/60000;temp2.slot=true;data.push(temp2)}else{let temp1={stamp:0,slot:false};data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,overFlow:"S",isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5))))/60000;temp2.slot=true;data.push(temp2)}}if(Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5)))===Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5)))){if(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))>Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))){let temp1={stamp:0,slot:false};data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))-Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5))))/60000;temp2.slot=true;data.push(temp2)}else{let temp1={stamp:0,slot:false};data.push(temp1);let temp2={stamp:0,slot:false,start:el.start,end:el.end,arrFrom:el.arrFrom,arrFlightScore:el.arrFlightScore,depTo:el.depTo,depFlightScore:el.depFlightScore,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,acftNo:el.acftNo,overFlow:"E",isConflict:el.isConflict};temp2.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(el.start?.split("T")[1].substring(0,2)),Number(el.start?.split("T")[1].substring(3,5))))/60000;temp2.slot=true;data.push(temp2)}}}if(index===list?.gateDetails.length-1&&Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5)))<Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))){let temp={stamp:0,slot:false};temp.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(el.end?.split("T")[1].substring(0,2)),Number(el.end?.split("T")[1].substring(3,5))))/60000;data.push(temp)}}}else{console.log("check finalGateData ===>1 ",list.gate,index);if(index>0&&list?.gateDetails[index-1]&&Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))>Date.UTC(0,0,0,Number(list?.gateDetails[index-1].end?.split("T")[1].substring(0,2)),Number(list?.gateDetails[index-1].end?.split("T")[1].substring(3,5)))){let temp={stamp:0,slot:false};temp.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(list?.gateDetails[index-1].end?.split("T")[1].substring(0,2)),Number(list?.gateDetails[index-1].end?.split("T")[1].substring(3,5))))/60000;data.push(temp)}else{if(data.length===0){let temp={stamp:0,slot:false};temp.stamp=(Date.UTC(0,0,0,Number(endTime.substring(0,2)),Number(endTime.substring(3,5)))-Date.UTC(0,0,0,Number(startTime.substring(0,2)),Number(startTime.substring(3,5))))/60000;data.push(temp)}}}console.log("finalGateDatalist",data)})}else{let temp={stamp:0,slot:false};temp.stamp=part;data.push(temp)}finalGateDataOther.push({gate:list.gate,data:data,isConflict:list?.gateDetails?.[0]?.isConflict==="Y"?list?.gateDetails?.[0]?.isConflict:"N"})});let finalGateDataNew:any=[];newGanttData?.length>0&&newGanttData?.map((list:any,ind:number)=>{let tempMainObj:any={gate:list.gate,data:[],dataConfig:[],dataConfigArr:[]};let tempData:any[]=[];let tempDataConfig:any[]=[];let tempDataConfigArr:any[]=[];list.gateDetails?.length>0&&(list.gateDetails.sort((a:any,b:any)=>new Date(a.estStartTimeLcl).getTime()-new Date(b.estStartTimeLcl).getTime())).map((el:any,index:number)=>{console.log(otherStartTime,otherEndTime,el.isConflict,'tempDataConfig tempDataConfig ==>22#',el,el.acftNo,(Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))<=Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))&&Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))>=Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))),(Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))&&Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))),(Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))&&Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))),(Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))&&Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))));list.gate==='C43'&&console.log('check the config error ====> ',el,(Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))<=Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))&&Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))>=Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))),(Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))&&Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))),(Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))&&Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))),(Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))&&Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))));list.gate==='C9'&&console.log(el.arrFlightNo,el,'check the Date change to moment => ',moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<=moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<=moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf(),moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf(),moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf(),moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf());if((moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<=moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>=moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())||(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())||(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())||(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())){(list.gate==='C43')&&console.log('check for work on multi level config =>',el,tempData);let configLineCheck=tempData[tempData?.length-1]?.slot===true?(moment(el?.start,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(tempData[tempData?.length-1]?.end,'YYYY-MM-DDTHH:mm:SS').valueOf()):false;if((el.isConflict==='N'||!el.isConflict)||(el.isConflict==='Y'&&configLineCheck)){console.log(otherEndTime,el.start,'el.isConflict===N   i am here ',Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1])));let tempEnd=moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf();let tempElStart=moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf();let tempStart=moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS');let tempElEnd=moment(el.End,'YYYY-MM-DDTHH:mm:SS');if(tempEnd>tempElStart){let pre=tempData[tempData.length-1];let S=tempData.length===0?otherStartTime:pre.end;let type=(moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())?'current':moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()?'past':'other';console.log('check thew flight ==>1',type,el.acftNo);let postFS=list.gateDetails[index+1]?.start;let postFE=list.gateDetails[index+1]?.end;let postArrDelay=moment(list.gateDetails[index+1]?.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(list.gateDetails[index+1]?.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes');let postConfig=list.gateDetails[index+1]?.isConflict;el.acftNo==='N801UA'&&console.log('1<== check thew flight ==>1',el.acftNo,list.gateDetails);let conflictBox=postConfig==='Y'?true:false;el.acftNo==='N67812'&&console.log('check the <=finalGateDataNew=>',list);console.log('check the united gantt issue =>',props,el,el.schStartTimeLcl,S,otherCurrentTime);let tempDetailData:any={};tempDetailData={postArrDelay:postArrDelay,conflictBox:conflictBox,conflictBoxMargin:moment(postFE,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()?0:moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(postFE,'YYYY-MM-DDTHH:mm:SS').valueOf()?0:moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(postFE,'YYYY-MM-DDTHH:mm:SS'),'minutes'),conflictBoxStamp:moment(postFS,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(postFE,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(postFE,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(postFE,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(postFS,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(postFE,'YYYY-MM-DDTHH:mm:SS').diff(moment(postFS,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(postFS,'YYYY-MM-DDTHH:mm:SS'),'minutes'),mainBar:true?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.schEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?0:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.schEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.schEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.schEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.schEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.schEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'),subMainBar:true?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?0:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'),subMainBreakDown:{},currentMainBar:type==='current'?moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):0,barType:type,upComingTarmecIn:list.gateDetails[index+1]?.inFltTaxiIn,tarmecIn:type==='current'?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment((el?.schStartTimeLcl<el?.estStartTimeLcl?el?.schStartTimeLcl:el?.estStartTimeLcl),'YYYY-MM-DDTHH:mm:SS').valueOf()?0:moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(S,'YYYY-MM-DDTHH:mm:SS').diff(moment((el?.schStartTimeLcl<el?.estStartTimeLcl?el?.schStartTimeLcl:el?.estStartTimeLcl),'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment((el?.schStartTimeLcl<el?.estStartTimeLcl?el?.schStartTimeLcl:el?.estStartTimeLcl),'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes'):false?moment((el?.schStartTimeLcl<el?.estStartTimeLcl?el?.schStartTimeLcl:el?.estStartTimeLcl),'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes'):el?.inFltTaxiIn,tarmecOut:type==='current'?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()?0:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):false?moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):el?.outFltTaxiOut,arr:el.arrFrom,dep:el.depTo,STA:el.schStartTimeLcl,ETA:el.estStartTimeLcl,STD:el.schEndTimeLcl,ETD:el.estEndTimeLcl,acftNo:el.acftNo,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,isTow:el.isTow,towGate:el.towGate,isInTow:el.isInTow,inTowGate:el.inTowGate,isOutTow:el.isOutTow,outTowGate:el.outTowGate,popUpDetail:el.popUpDetail,stampOfConflict:el?.stampOfConflict,marginOfConflict:el?.marginOfConflict,configBoxList:el?.configBoxList};if(type==='current'){tempDetailData.subMainBreakDown={arrDelay:(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf())?0:(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(S,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes')),currentRemain:moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),otherRemain:moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS'),'minutes')}}else{tempDetailData.subMainBreakDown={arrDelay:moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),remain:true?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes')}}console.log('check thew flight ==>deatailData',tempDetailData,el.acftNo);console.log('check data entery ====>0',el,tempData.length===0?otherStartTime:pre.end,Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(S?.split('T')[0]?.split('-')[0]),Number(S?.split('T')[0]?.split('-')[1]),Number(S?.split('T')[0]?.split('-')[2]),Number(S?.split('T')[1]?.split(':')[0]),Number(S?.split('T')[1]?.split(':')[1])),Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1])));if(el.acftNo==="N483XA"){console.log('check the N38467 things =>non config ',el,S)}list?.gate==='C43'&&console.log('1st',Date.UTC(Number(S?.split('T')[0]?.split('-')[0]),Number(S?.split('T')[0]?.split('-')[1]),Number(S?.split('T')[0]?.split('-')[2]),Number(S?.split('T')[1]?.split(':')[0]),Number(S?.split('T')[1]?.split(':')[1]))<=Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))&&Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))>=Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1])),'2nd',Date.UTC(Number(S?.split('T')[0]?.split('-')[0]),Number(S?.split('T')[0]?.split('-')[1]),Number(S?.split('T')[0]?.split('-')[2]),Number(S?.split('T')[1]?.split(':')[0]),Number(S?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))&&Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1])),'3rd',Date.UTC(Number(S?.split('T')[0]?.split('-')[0]),Number(S?.split('T')[0]?.split('-')[1]),Number(S?.split('T')[0]?.split('-')[2]),Number(S?.split('T')[1]?.split(':')[0]),Number(S?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))&&Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1])),'4th',Date.UTC(Number(S?.split('T')[0]?.split('-')[0]),Number(S?.split('T')[0]?.split('-')[1]),Number(S?.split('T')[0]?.split('-')[2]),Number(S?.split('T')[1]?.split(':')[0]),Number(S?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))&&Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1])),'config error i am here ====> XYZ###',el);if((moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<=moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>=moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())){console.log('check data entery ====>1',el.acftNo);list?.gate==='C43'&&console.log('###config error i am here ====> XYZ',el);tempData.push({stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false});console.log('check thew flight ==>2',el,el.acftNo);list?.gate==='C43'&&console.log('config error i am here ====> XYZ',el);tempData.push({slot:true,end:el.end,start:el.start,acftNo:el.acftNo,detailData:tempDetailData,stamp:moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes')});list?.gate==='C43'&&console.log(tempData,'###config error i am here ====> XYZ',el);if(el.acftNo==="N38467"){console.log('check the N38467 things =>non config1 ',el)}}if((moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())){console.log('check data entery ====>3',el.acftNo);list?.gate==='C43'&&console.log('config error i am here ====> XYZ',el);tempData.push({stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false});list?.gate==='C43'&&console.log('config error i am here ====> XYZ',el);tempData.push({slot:true,end:el.end,start:el.start,acftNo:el.acftNo,detailData:tempDetailData,stamp:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes')})}if((moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())){console.log('check data entery ====>4',el.acftNo);list?.gate==='C43'&&console.log('config error i am here ====> XYZ',el);tempData.push({slot:true,end:el.end,start:el.start,acftNo:el.acftNo,detailData:tempDetailData,stamp:moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes')});if(el.acftNo==="N483XA"){console.log('check the N38467 things N483XA##=> ',el)}}if((moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())){console.log('check data entery ====>5',el.acftNo);list?.gate==='C43'&&console.log('config error i am here ====> XYZ',el);tempData.push({slot:true,end:el.end,start:el.start,acftNo:el.acftNo,detailData:tempDetailData,stamp:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes')});if(el.acftNo==="N38467"){console.log('check the N38467 things =>non config4 ',el)}}if(index===list.gateDetails?.length-1){if(moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()){list?.gate==='C43'&&console.log('config error i am here ====> XYZ',el);tempData.push({stamp:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.end,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false})}}}}else{console.log('i am here for config check !!!!!!',el);list?.gate==='C43'&&console.log('config error i am here ====>',el);list?.gate==='C9'&&console.log('*** config error i am here ====>',el,moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf());if(moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let S='';let levelCounter=0;levelCounter>0&&tempDataConfigArr.length>=levelCounter&&tempDataConfigArr[levelCounter-1][`level_${levelCounter}_data`]?.length>0?(S=tempDataConfigArr[levelCounter-1][`level_${levelCounter}_data`][tempDataConfigArr[levelCounter-1][`level_${levelCounter}_data`]?.length-1].end):S=otherStartTime;let pre=tempDataConfig[tempDataConfig.length-1];let type=(moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())?'current':moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()?'past':'other';console.log('check thew flight ==>1',type,el.acftNo);let postFE=list.gateDetails[index-1]?.end;let postConfig=list.gateDetails[index]?.isConflict;let conflictBox=postConfig==='Y'?true:false;if(el.acftNo==='N883XA'){console.log('check for flight N883XA => ',postFE,Date.UTC(Number(postFE?.split('T')[0]?.split('-')[0]),Number(postFE?.split('T')[0]?.split('-')[1]),Number(postFE?.split('T')[0]?.split('-')[2]),Number(postFE?.split('T')[1]?.split(':')[0]),Number(postFE?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1])))}let tempDetailData:any={};tempDetailData={conflictBox1:conflictBox,conflictBox:postConfig==='Y'?true:false,conflictBoxStamp:moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(postFE,'YYYY-MM-DDTHH:mm:SS').valueOf()?0:moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(postFE,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(postFE,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(postFE,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(postFE,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(postFE,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(postFE,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(postFE,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(postFE,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes',)mainBar:true?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.schEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?0:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.schEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.schEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.schEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.schEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.schEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'),subMainBar:true?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?0:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'),subMainBreakDown:{},currentMainBar:type==='current'?moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):0,barType:type,tarmecIn:false?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?0:moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(S,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes'):false?moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes'):el?.inFltTaxiIn,tarmecOut:false?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()?0:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):false?moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):el?.outFltTaxiOut,arr:el.arrFrom,dep:el.depTo,STA:el.schStartTimeLcl,ETA:el.estStartTimeLcl,STD:el.schEndTimeLcl,ETD:el.estEndTimeLcl,acftNo:el.acftNo,arrFlightNo:el.arrFlightNo,depFlightNo:el.depFlightNo,isTow:el.isTow,towGate:el.towGate,isInTow:el.isInTow,inTowGate:el.inTowGate,isOutTow:el.isOutTow,outTowGate:el.outTowGate,popUpDetail:el.popUpDetail,stampOfConflict:el?.stampOfConflict,marginOfConflict:el?.marginOfConflict,configBoxList:el?.configBoxList};if(type==='current'){tempDetailData.subMainBreakDown={arrDelay:moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),currentRemain:moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'),otherRemain:moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherCurrentTime,'YYYY-MM-DDTHH:mm:SS'),'minutes')}}else{tempDetailData.subMainBreakDown={arrDelay:moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.schStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),remain:true?moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').valueOf()?moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes'):moment(el.estEndTimeLcl,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.estStartTimeLcl,'YYYY-MM-DDTHH:mm:SS'),'minutes')}}list.gate==='C9'&&console.log(el,otherStartTime,otherEndTime,'check for C9 gate things => ',(moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()),'S<FS and E>FE',(moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()),'S<FS and E<FE',(moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()),'S>FS and E>FE',(moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()),'S>FS and E<FE','S',S,'FS',el.start,'FE',el.end,'E',otherEndTime);if((moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())){tempDataConfig.push({stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false});tempDataConfig.push({slot:true,end:el.end,start:el.start,acftNo:el.acftNo,detailData:tempDetailData,stamp:moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes')});let tempData={slot:true,end:el.end,start:el.start,acftNo:el.acftNo,detailData:tempDetailData,stamp:moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes')};let tempLevel=0;for(let i=index-1;i>=0;i--){tempLevel=tempLevel+1;if(list.gateDetails.sort((a:any,b:any)=>new Date(a.estStartTimeLcl).getTime()-new Date(b.estStartTimeLcl).getTime())[i]?.isConflict==='N'){let isEntered=false;if(tempDataConfigArr?.length>0){for(let indx=0;indx<tempDataConfigArr.length;indx++){let S=tempDataConfigArr[indx][`level_${indx+1}_data`][tempDataConfigArr[indx][`level_${indx+1}_data`]?.length-1]?.end;if(moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempDataConfigArr[indx][`level_${indx+1}_data`].push(temp);tempDataConfigArr[indx][`level_${indx+1}_data`].push(tempData);isEntered=true;break}}if(isEntered===false){let tempObj:any={};tempObj[`level_${tempDataConfigArr?.length+1}_data`]=[];if(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempObj[`level_${tempDataConfigArr?.length+1}_data`]=[...tempObj[`level_${tempDataConfigArr?.length+1}_data`],...[temp]]}tempObj[`level_${tempDataConfigArr?.length+1}_data`]=[...tempObj[`level_${tempDataConfigArr?.length+1}_data`],...[tempData]];tempDataConfigArr.push(tempObj)}break}else{let tempObj:any={};tempObj[`level_1_data`]=[];if(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempObj[`level_1_data`]=[...tempObj[`level_1_data`],...[temp]]}tempObj[`level_1_data`]=[...tempObj[`level_1_data`],...[tempData]];tempDataConfigArr.push(tempObj);break}}}}if((moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())){tempDataConfig.push({stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false});tempDataConfig.push({slot:true,end:el.end,start:el.start,acftNo:el.acftNo,detailData:tempDetailData,stamp:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes')});let tempData={slot:true,end:el.end,start:el.start,acftNo:el.acftNo,detailData:tempDetailData,stamp:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.start,'YYYY-MM-DDTHH:mm:SS'),'minutes')};let tempLevel=0;for(let i=index-1;i>=0;i--){tempLevel=tempLevel+1;if(list.gateDetails.sort((a:any,b:any)=>new Date(a.estStartTimeLcl).getTime()-new Date(b.estStartTimeLcl).getTime())[i]?.isConflict==='N'){let isEntered=false;if(tempDataConfigArr?.length>0){for(let indx=0;indx<tempDataConfigArr.length;indx++){let S=tempDataConfigArr[indx][`level_${indx+1}_data`][tempDataConfigArr[indx][`level_${indx+1}_data`]?.length-1]?.end;if(moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempDataConfigArr[indx][`level_${indx+1}_data`].push(temp);tempDataConfigArr[indx][`level_${indx+1}_data`].push(tempData);isEntered=true;break}}if(isEntered===false){let tempObj:any={};tempObj[`level_${tempDataConfigArr?.length+1}_data`]=[];if(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempObj[`level_${tempDataConfigArr?.length+1}_data`]=[...tempObj[`level_${tempDataConfigArr?.length+1}_data`],...[temp]]}tempObj[`level_${tempDataConfigArr?.length+1}_data`]=[...tempObj[`level_${tempDataConfigArr?.length+1}_data`],...[tempData]];tempDataConfigArr.push(tempObj)}break}else{let tempObj:any={};tempObj[`level_1_data`]=[];if(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempObj[`level_1_data`]=[...tempObj[`level_1_data`],...[temp]]}tempObj[`level_1_data`]=[...tempObj[`level_1_data`],...[tempData]];tempDataConfigArr.push(tempObj);break}}}}if((moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())){tempDataConfig.push({slot:true,end:el.end,start:el.start,acftNo:el.acftNo,detailData:tempDetailData,stamp:moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes')});let tempData={slot:true,end:el.end,start:el.start,acftNo:el.acftNo,detailData:tempDetailData,stamp:moment(el.end,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes')};let tempLevel=0;for(let i=index-1;i>=0;i--){tempLevel=tempLevel+1;if(list.gateDetails.sort((a:any,b:any)=>new Date(a.estStartTimeLcl).getTime()-new Date(b.estStartTimeLcl).getTime())[i]?.isConflict==='N'){let isEntered=false;if(tempDataConfigArr?.length>0){for(let indx=0;indx<tempDataConfigArr.length;indx++){let S=tempDataConfigArr[indx][`level_${indx+1}_data`][tempDataConfigArr[indx][`level_${indx+1}_data`]?.length-1]?.end;if(moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempDataConfigArr[indx][`level_${indx+1}_data`].push(temp);tempDataConfigArr[indx][`level_${indx+1}_data`].push(tempData);isEntered=true;break}}if(isEntered===false){let tempObj:any={};tempObj[`level_${tempDataConfigArr?.length+1}_data`]=[];if(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempObj[`level_${tempDataConfigArr?.length+1}_data`]=[...tempObj[`level_${tempDataConfigArr?.length+1}_data`],...[temp]]}tempObj[`level_${tempDataConfigArr?.length+1}_data`]=[...tempObj[`level_${tempDataConfigArr?.length+1}_data`],...[tempData]];tempDataConfigArr.push(tempObj)}break}else{let tempObj:any={};tempObj[`level_1_data`]=[];if(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempObj[`level_1_data`]=[...tempObj[`level_1_data`],...[temp]]}tempObj[`level_1_data`]=[...tempObj[`level_1_data`],...[tempData]];tempDataConfigArr.push(tempObj);break}}}}if((moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()>moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()&&moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf())){tempDataConfig.push({slot:true,end:el.end,start:el.start,acftNo:el.acftNo,detailData:tempDetailData,stamp:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes')});let tempData={slot:true,end:el.end,start:el.start,acftNo:el.acftNo,detailData:tempDetailData,stamp:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes')};let tempLevel=0;for(let i=index-1;i>=0;i--){tempLevel=tempLevel+1;if(list.gateDetails.sort((a:any,b:any)=>new Date(a.estStartTimeLcl).getTime()-new Date(b.estStartTimeLcl).getTime())[i]?.isConflict==='N'){let isEntered=false;if(tempDataConfigArr?.length>0){for(let indx=0;indx<tempDataConfigArr.length;indx++){let S=tempDataConfigArr[indx][`level_${indx+1}_data`][tempDataConfigArr[indx][`level_${indx+1}_data`]?.length-1]?.end;if(moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempDataConfigArr[indx][`level_${indx+1}_data`].push(temp);tempDataConfigArr[indx][`level_${indx+1}_data`].push(tempData);isEntered=true;break}}if(isEntered===false){let tempObj:any={};tempObj[`level_${tempDataConfigArr?.length+1}_data`]=[];if(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempObj[`level_${tempDataConfigArr?.length+1}_data`]=[...tempObj[`level_${tempDataConfigArr?.length+1}_data`],...[temp]]}tempObj[`level_${tempDataConfigArr?.length+1}_data`]=[...tempObj[`level_${tempDataConfigArr?.length+1}_data`],...[tempData]];tempDataConfigArr.push(tempObj)}break}else{let tempObj:any={};tempObj[`level_1_data`]=[];if(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(el.start,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(el.start,'YYYY-MM-DDTHH:mm:SS').diff(moment(otherStartTime,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempObj[`level_1_data`]=[...tempObj[`level_1_data`],...[temp]]}tempObj[`level_1_data`]=[...tempObj[`level_1_data`],...[tempData]];tempDataConfigArr.push(tempObj);break}}}}if(index===list.gateDetails?.length-1){if(moment(el.end,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()){tempDataConfig.push({stamp:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(el.end,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false})}}}}}});tempDataConfigArr?.length>0&&tempDataConfigArr.map((newEl:any,index:number)=>{let S=tempDataConfigArr[index][`level_${index+1}_data`][tempDataConfigArr[index][`level_${index+1}_data`]?.length-1]?.end;if(moment(S,'YYYY-MM-DDTHH:mm:SS').valueOf()<moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').valueOf()){let temp={stamp:moment(otherEndTime,'YYYY-MM-DDTHH:mm:SS').diff(moment(S,'YYYY-MM-DDTHH:mm:SS'),'minutes'),slot:false};tempDataConfigArr[index][`level_${index+1}_data`].push(temp)}});list?.gate==='C43'&&console.log('check config main flight for united',tempData);tempMainObj.data=tempData;tempMainObj.dataConfig=tempDataConfig;tempMainObj.dataConfigArr=tempDataConfigArr;list.gate==='C8'&&console.log('check the tempDataConfigArr tempDataConfigArr => ',tempDataConfigArr);finalGateDataNew.push(tempMainObj)});let finalGateDataNewFinal:any=[];finalGateDataNew.length>0&&finalGateDataNew.map((el:any,ind:number)=>{let mainTemp=el;if(el.data[el.data.length-1]?.slot===true){if(Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))>=Date.UTC(Number(el.data[el.data.length-1].end?.split('T')[0]?.split('-')[0]),Number(el.data[el.data.length-1].end?.split('T')[0]?.split('-')[1]),Number(el.data[el.data.length-1].end?.split('T')[0]?.split('-')[2]),Number(el.data[el.data.length-1].end?.split('T')[1]?.split(':')[0]),Number(el.data[el.data.length-1].end?.split('T')[1]?.split(':')[1]))){mainTemp.data.push({slot:false,stamp:(Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))-Date.UTC(Number(el.data[el.data.length-1].end?.split('T')[0]?.split('-')[0]),Number(el.data[el.data.length-1].end?.split('T')[0]?.split('-')[1]),Number(el.data[el.data.length-1].end?.split('T')[0]?.split('-')[2]),Number(el.data[el.data.length-1].end?.split('T')[1]?.split(':')[0]),Number(el.data[el.data.length-1].end?.split('T')[1]?.split(':')[1])))/60000})}}if(el.dataConfig[el.dataConfig.length-1]?.slot===true){if(Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))>=Date.UTC(Number(el.dataConfig[el.dataConfig.length-1].end?.split('T')[0]?.split('-')[0]),Number(el.dataConfig[el.dataConfig.length-1].end?.split('T')[0]?.split('-')[1]),Number(el.dataConfig[el.dataConfig.length-1].end?.split('T')[0]?.split('-')[2]),Number(el.dataConfig[el.dataConfig.length-1].end?.split('T')[1]?.split(':')[0]),Number(el.dataConfig[el.dataConfig.length-1].end?.split('T')[1]?.split(':')[1]))){mainTemp.dataConfig.push({slot:false,stamp:(Date.UTC(Number(otherEndTime?.split('T')[0]?.split('-')[0]),Number(otherEndTime?.split('T')[0]?.split('-')[1]),Number(otherEndTime?.split('T')[0]?.split('-')[2]),Number(otherEndTime?.split('T')[1]?.split(':')[0]),Number(otherEndTime?.split('T')[1]?.split(':')[1]))-Date.UTC(Number(el.dataConfig[el.dataConfig.length-1].end?.split('T')[0]?.split('-')[0]),Number(el.dataConfig[el.dataConfig.length-1].end?.split('T')[0]?.split('-')[1]),Number(el.dataConfig[el.dataConfig.length-1].end?.split('T')[0]?.split('-')[2]),Number(el.dataConfig[el.dataConfig.length-1].end?.split('T')[1]?.split(':')[0]),Number(el.dataConfig[el.dataConfig.length-1].end?.split('T')[1]?.split(':')[1])))/60000})}}finalGateDataNewFinal.push(mainTemp)});console.log(finalGateDataNew,finalGateDataNewFinal,'<==> check gateDataOther finalGateDataNew => ',gateData,gateDataOther,finalGateDataOther,finalGateData);let trackWidth=window.innerWidth-Constants.CARD_CONTAINER_WIDTH-140-30;let gateFinalData:any=[];false&&finalGateData.length>0&&finalGateData.map((list:any,index:number)=>{console.log("check el for gateFinalData ==> ",list,list.data.length);let tempMainObj=list;let tempArr:any=[];list.data.length>0&&list.data.map((el:any,i:number)=>{if(Number(el.stamp)>0){let temp=el;if(el.slot===true){if(i+1<list.data.length){if(finalGateData[index].data[i+1]?.stamp!=undefined&&Number(finalGateData[index].data[i+1]?.stamp)<0){temp.stamp=finalGateData[index]?.data[i]?.stamp+finalGateData[index]?.data[i+1]?.stamp;temp["overFlow"]="E";console.log("check el for gateFinalData ==>11 ",el,i,list.data.length)}}if(finalGateData[index]?.data[i-1]?.stamp<0){temp["conflict"]=true;console.log("check el for gateFinalData ==>12 ",el,i,list.data.length)}console.log("check el for gateFinalData ==>1 ",el,i,list.data.length)}tempArr.push(temp);}});tempMainObj.data=tempArr;gateFinalData.push(tempMainObj)});console.log("check finalGateData ===> ",finalGateData,gateFinalData,gateData,endTime,trackWidth,part,window.innerWidth);return(<><>{console.log('check the finalGateData ===> finalGateData',finalGateDataNew,newGanttData)}</>
      {/*<div style={{display:'flex'}}><div style={{width:'50px',cursor:'pointer'}}onClick={()=>{hours!==6&&hoursSet(hours+1)}}>+1</div>
            <div>{`${hours} Hours`}</div><div style={{width:'50px', cursor:'pointer'}} onClick={()=>{hours!==2&&hoursSet(hours-1)}}>-1</div>
    </div> */}
      {/*<div style={Styles.ganttShowViewMain}>*/}
      {false?<div>rahul gantt </div>:<div>{}<div style={{width:'100%',height:'210px',position:'fixed',zIndex:1,backgroundColor:'#F3F4FB'}}></div>{}<div style={{paddingTop:'250px',zIndex:0,position:'absolute',backgroundColor:'#F3F4FB'}}>{}<div style={{position:'absolute',opacity:0.6,marginLeft:`${((trackWidth/part)*selectedTimeLineValue?.startTime)-2+140}px`,top:155,borderRight:'2px solid #3381F3',height:`100%`}}></div>{}{}{}{finalGateDataNew.length>0&&(finalGateDataNew.sort((a:any,b:any)=>Number(a.gate?.substring(1,a.gate.length))>Number(b.gate?.substring(1,b.gate.length))?1:-1)).map((list:any,i:number)=>{list.gate==="C43"&&console.log('check the <=finalGateDataNew=> ',list,startTime,otherStartTime);return(<>{(list?.data?.length>0||list?.dataConfig?.length>0)&&<div style={{...Styles.ganttShowViewWorkBox}}><div style={Styles.ganttShowViewGateBox}><GateLabel view={"gantt"}bgColor={"#E2E2E2"}textColor={"#1D1D1D"}lableWidth={125}labelHeight={30}value={list.gate}/></div>{}<div>{}<div style={{...Styles.ganttShowViewTrackBox,...{width:`${trackWidth}px`}}}>{list.data.length>0&&list.data.map((el:any,index:number)=>{list?.gate==='C7'&&console.log("GanttShowView 1###==>##",el,list);return(<>{console.log('check the final stamp ===> ',el.detailData?.barType,el)}{}{el.slot===true?<div>{}{el.detailData.isInTow===true&&<div style={{position:'absolute',display:'flex',marginTop:'-14px',marginLeft:'-35px'}}><div style={{padding:'1px 6px 2px 6px', color:'#FFFFFF', backgroundColor:'#666666', height:'13px', fontSize:'10px', borderRadius:'10px', marginTop:'11px'}}>{el.detailData.inTowGate}</div>
                              <div style={{fontSize:'40px',rotate:"70deg",marginLeft:'-5px',color:'#666666'}}>&#8764;</div></div>}<div>{el.detailData?.barType==="current"?<FlightSlot configLine={false} type={'current'} selectedFlight={selectedFlight} track={(Number(trackWidth) / part)} detailData={el.detailData} slotWidth={(Number(trackWidth) / part) * el.stamp}/>:el.detailData?.barType==="other"?<FlightSlot configLine={false} type={"other"} selectedFlight={selectedFlight} track={(Number(trackWidth) / part)} detailData={el.detailData} slotWidth={(Number(trackWidth) / part) * el.stamp}/>:el.detailData?.barType==="past"?<FlightSlot otherStartTime={otherStartTime} configLine={false} type={"past"} selectedFlight={selectedFlight} track={(Number(trackWidth) / part)} detailData={el.detailData} slotWidth={(Number(trackWidth) / part) * el.stamp}/>:''}</div>
                          {el.detailData.isOutTow===true&&<div style={{position:'absolute',display:'flex',marginTop:'-45px',marginLeft:`${((Number(trackWidth) /part)*el.stamp)+3}px`}}>
                              <div style={{fontSize:'40px',rotate:"70deg",marginLeft:'-5px',color:'#666666'}}>&#8764;</div>
                              <div style={{padding:'1px 6px 2px 6px',color:'#FFFFFF',backgroundColor:'#666666',height:'13px',fontSize:'10px',borderRadius:'10px',marginTop:'29px',marginLeft:'-13px'}}>{el.detailData.outTowGate}</div>
                            </div>}
                          {/* {el.detailData?.conflictBox===true&&<div style={{position:'absolute',width:`${((Number(trackWidth)/part)*el.stamp)-el?.detailData?.upComingTarmecIn}px`,marginTop:'-35px',marginLeft:`${el?.detailData?.upComingTarmecIn}px`}}> */}
                          {/* {el.detailData?.conflictBox===true&&<div style={{position:'absolute',width:`${((Number(trackWidth)/part)*el.stamp)}px`,marginTop:'-35px'}}> */}
                          
                          {/* {el.detailData?.conflictBox===true&&<div style={{position:'absolute',marginTop:'-35px',marginLeft:`${(Number(trackWidth)/part)*el.detailData?.tarmecIn}px`}}> */}
                          {
                            Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))&&
                            // el.stamp>0&&el.detailData?.conflictBox===true&&
                            el.stamp>0&&el.detailData?.configBoxList?.length>0&&el.detailData?.configBoxList.map((item:any)=>{
                              return(
                            <div style={{position:'absolute',marginTop:'-35px',
                            marginLeft:Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el.start?.split('T')[0]?.split('-')[0]),Number(el.start?.split('T')[0]?.split('-')[1]),Number(el.start?.split('T')[0]?.split('-')[2]),Number(el.start?.split('T')[1]?.split(':')[0]),Number(el.start?.split('T')[1]?.split(':')[1]))?'0px':`${(Number(trackWidth)/part)*el.detailData?.tarmecIn}px`}}>
                            {/* <div style={{width:`${(Number(trackWidth)/part)*el.detailData?.conflictBoxStamp}px`,backgroundColor:'#ff4d4d',border:'2px solid #b30000',borderRadius:'10px',opacity:0.5,height:'16px',marginLeft:'auto',marginRight:`${el.detailData?.conflictBoxMargin!=0&&`${el.detailData?.conflictBoxMargin*(Number(trackWidth)/part)}px`}`}}></div> */}
                            {/* <div style={{...{width:`${(Number(trackWidth)/part)*el.detailData?.conflictBoxStamp}px`,backgroundColor:'#ff4d4d',border:'2px solid #b30000',borderRadius:'10px',opacity:0.5,height:'16px',marginLeft:'auto'},...el.detailData?.conflictBoxMargin!=0&&{marginRight:`${el.detailData?.conflictBoxMargin*(Number(trackWidth)/part)}px`}}}></div> */}
                            {/* <div style={{...{width:`${((Number(trackWidth)/part)*el.detailData?.conflictBoxStamp)-((Number(trackWidth)/part)*el?.detailData?.upComingTarmecIn)-((Number(trackWidth)/part)*el?.detailData?.postArrDelay)}px`,backgroundColor:'#ff4d4d',border:'1px solid #b30000',borderRadius:'10px',opacity:0.5,height:'13px',marginTop:'3px',marginLeft:'auto'},...el.detailData?.conflictBoxMargin!=0&&{marginRight:`${el.detailData?.conflictBoxMargin*(Number(trackWidth)/part)}px`}}}></div> */}
                            {/* <div style={{...{width:`${((Number(trackWidth)/part)*el.detailData?.conflictBoxStamp)-((Number(trackWidth)/part)*el?.detailData?.upComingTarmecIn)}px`,backgroundColor:'#ff4d4d',border:'1px solid #b30000',borderRadius:'10px',opacity:0.5,height:'13px',marginTop:'3px',marginLeft:'auto'},...el.detailData?.conflictBoxMargin!=0&&{marginRight:`${el.detailData?.conflictBoxMargin*(Number(trackWidth)/part)}px`}}}></div> */}
                            <>{console.log('check the marginOfConflict ===> @@@@ ',el)}</>
                            {/* <div style={{...{width:`${(Number(trackWidth)/part)*(el?.detailData?.stampOfConflict>0?1:-1)*el?.detailData?.stampOfConflict}px`,backgroundColor:'#ff4d4d',border:'1px solid #b30000',borderRadius:'10px',opacity:0.5,height:'13px',marginTop:'3px', */}
                            <div style={{...{width:`${(Number(trackWidth)/part)*(item?.configStamp>0?1:-1)*item?.configStamp}px`,backgroundColor:'#ff4d4d',border:'1px solid #b30000',borderRadius:'10px',opacity:0.5,height:'13px',marginTop:'3px',
                            marginLeft:
                            // Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el?.detailData?.STA?.split('T')[0]?.split('-')[0]),Number(el?.detailData?.STA?.split('T')[0]?.split('-')[1]),Number(el?.detailData?.STA?.split('T')[0]?.split('-')[2]),Number(el?.detailData?.STA?.split('T')[1]?.split(':')[0]),Number(el?.detailData?.STA?.split('T')[1]?.split(':')[1]))?'0px':
                            // `${((Number(trackWidth)/part)*el.detailData?.marginOfConflict)}px`}
                            `${((Number(trackWidth)/part)*item?.configMargin)}px`}
                            // ,...el.detailData?.conflictBoxMargin!=0&&{marginRight:`${el.detailData?.conflictBoxMargin*(Number(trackWidth)/part)}px`}
                            }}></div>
                          </div>
                          )})
                          }
                          </div>: (
                            // <HorizontalSlot view={'nonSlot'} bgColor={'#E2E2E2'} slotWidth={(1330/(part*interval))*el.stamp} slotHeight={2}/>
                            <HorizontalSlot
                              view={"nonSlot"}
                              bgColor={"#E2E2E2"}
                              slotWidth={(Number(trackWidth) / part) * el.stamp}
                              slotHeight={2}
                            />
                          )}
                        </>
                      );
                    })}

                    </div>

                    {/* below thing for config line */}
                  {true&&  <>{list.dataConfigArr?.length>0&&list.dataConfigArr.map((levl: any, indexI:number)=>{
                      return(
                        <div style={{...Styles.ganttShowViewTrackBox,...{width:`${window.innerWidth-450-140}px`,marginTop:'20px'}}}>
                          {levl[`level_${indexI+1}_data`]?.length>0&&levl[`level_${indexI+1}_data`].map((el: any, index:number)=>{
                            list?.gate==='C3'&&(indexI+1)===2&&console.log('#### check tempDataConfigArr #### ===>',el)
                            return (
                              <>
                                {el.slot === true ? 
                                <div>
                                  {/* {Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))&&
                                  el.stamp>0&&el.detailData.isTow===true&&<div style={{position:'absolute',display:'flex',marginTop:'-14px',marginLeft:'-15px'}}>
                                    <div style={{padding:'1px 6px 2px 6px',color:'#FFFFFF',backgroundColor:'#666666',height:'13px',fontSize:'10px',borderRadius:'10px',marginTop:'11px'}}>{el.detailData.towGate}</div>
                                    <div style={{fontSize:'40px',rotate:"70deg",marginLeft:'-5px',color:'#666666'}}>&#8764;</div>
                                  </div>} */}

                                  {el.detailData.isInTow===true&&<div style={{position:'absolute',display:'flex',marginTop:'-14px',marginLeft:'-35px'}}>
                                    <div style={{padding:'1px 6px 2px 6px',color:'#FFFFFF',backgroundColor:'#666666',height:'13px',fontSize:'10px',borderRadius:'10px',marginTop:'11px'}}>{el.detailData.inTowGate}</div>
                                    <div style={{fontSize:'40px',rotate:"70deg",marginLeft:'-5px',color:'#666666'}}>&#8764;</div>
                                  </div>}

                                  {
                                  Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))&&
                                  // el.stamp>0&&el.detailData?.conflictBox===true&&
                                  el.stamp>0&&el.detailData?.configBoxList?.length>0&&el.detailData?.configBoxList.map((list:any)=>{
                                    return (
                                  <div style={{position:'absolute',marginTop:'15px',marginLeft:`${(Number(trackWidth)/part)*el.detailData?.tarmecIn}px`}}>
                                    <div style={{
                                      // width:`${(Number(trackWidth)/part)*(el.detailData?.stampOfConflict)*(el.detailData?.stampOfConflict<0?-1:1)}px`,
                                      width:`${(Number(trackWidth)/part)*(list?.configStamp)*(list?.configStamp<0?-1:1)}px`,
                                      marginLeft:
                                      // `${((Number(trackWidth)/part)*el.detailData?.marginOfConflict)}px`,
                                      `${((Number(trackWidth)/part)*list?.configMargin)}px`,
                                      backgroundColor:'#ff4d4d',border:'1px solid #b30000',borderRadius:'10px',opacity:0.5,height:'13px',marginTop:'3px'}}></div>
                                  </div>
                                  )})
                                  }
                                  <div>{el.detailData?.barType==="current"?<FlightSlot configLine={true} type={'current'} selectedFlight={selectedFlight} track={(Number(trackWidth) / part)} detailData={el.detailData} slotWidth={(Number(trackWidth) / part) * el.stamp}/>:
                                  el.detailData?.barType==="other"?<FlightSlot configLine={true} type={"other"} selectedFlight={selectedFlight} track={(Number(trackWidth) / part)} detailData={el.detailData} slotWidth={(Number(trackWidth) / part) * el.stamp}/>:
                                  el.detailData?.barType==="past"?<FlightSlot otherStartTime={otherStartTime} configLine={false} type={"past"} selectedFlight={selectedFlight} track={(Number(trackWidth) / part)} detailData={el.detailData} slotWidth={(Number(trackWidth) / part) * el.stamp}/>:
                                  ''}
                                  </div>
                                  {el.detailData.isOutTow===true&&<div style={{position:'absolute',display:'flex',marginTop:'-45px',marginLeft:`${((Number(trackWidth)/part)*el.stamp)+3}px`}}>
                                    <div style={{fontSize:'40px',rotate:"70deg",marginLeft:'-5px',color:'#666666'}}>&#8764;</div>
                                    <div style={{padding:'1px 6px 2px 6px',color:'#FFFFFF',backgroundColor:'#666666',height:'13px',fontSize:'10px',borderRadius:'10px',marginTop:'29px',marginLeft:'-13px'}}>{el.detailData.outTowGate}</div>
                                  </div>}
                                </div>
                                : (
                                  <HorizontalSlot
                                    view={"nonSlot"}
                                    bgColor={"#E2E2E2"}
                                    slotWidth={(Number(trackWidth) / part) * el.stamp}
                                    slotHeight={2}
                                  />
                                )}
                              </>
                            );
                          })}
                        </div>
                      )
                  })}</>}
                {false&&<div style={{...Styles.ganttShowViewTrackBox,...{width:`${window.innerWidth-450-140}px`,marginTop:'20px'}}}>
                  {list.dataConfig.length > 0 &&
                    list.dataConfig.map((el: any, index: number) => {
                      // console.log("GanttShowView 1###==>", el, list);
                      list?.gate==='C44'&&console.log("GanttShowView 1###==>",
                        Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el?.end?.split('T')[0]?.split('-')[0]),Number(el?.end?.split('T')[0]?.split('-')[1]),Number(el?.end?.split('T')[0]?.split('-')[2]),Number(el?.end?.split('T')[1]?.split(':')[0]),Number(el?.end?.split('T')[1]?.split(':')[1])),
                        otherStartTime,el?.end,el.detailData,list
                       );

                      return (
                        <>
                          {el.slot === true ? 
                          <div>
                            {/* {el.detailData.isTow===true&&<div style={{position:'absolute',display:'flex',marginTop:'-14px',marginLeft:'-34px'}}> */}
                            {
                            Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))&&
                            el.stamp>0&&el.detailData.isTow===true&&<div style={{position:'absolute',display:'flex',marginTop:'-14px',marginLeft:'-15px'}}>
                              <div style={{padding:'1px 6px 2px 6px',color:'#FFFFFF',backgroundColor:'#666666',height:'13px',fontSize:'10px',borderRadius:'10px',marginTop:'11px'}}>{el.detailData.towGate}</div>
                              <div style={{fontSize:'40px',rotate:"70deg",marginLeft:'-5px',color:'#666666'}}>&#8764;</div>
                            </div>}
                            {
                            Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))<Date.UTC(Number(el.end?.split('T')[0]?.split('-')[0]),Number(el.end?.split('T')[0]?.split('-')[1]),Number(el.end?.split('T')[0]?.split('-')[2]),Number(el.end?.split('T')[1]?.split(':')[0]),Number(el.end?.split('T')[1]?.split(':')[1]))&&
                            el.stamp>0&&el.detailData?.conflictBox===true&&<div style={{position:'absolute',marginTop:'15px',marginLeft:`${(Number(trackWidth)/part)*el.detailData?.tarmecIn}px`}}>
                              {/* <div style={{width:`${((Number(trackWidth)/part)*el.detailData?.conflictBoxStamp)-((Number(trackWidth)/part)*el.detailData?.tarmecIn)-((Number(trackWidth)/part)*el.detailData?.subMainBreakDown?.arrDelay)}px`,marginLeft:`${((Number(trackWidth)/part)*el.detailData?.subMainBreakDown?.arrDelay)}px`,backgroundColor:'#ff4d4d',border:'1px solid #b30000',borderRadius:'10px',opacity:0.5,height:'13px',marginTop:'3px'}}></div> */}
                              {/* <div style={{width:`${((Number(trackWidth)/part)*el.detailData?.conflictBoxStamp)-((Number(trackWidth)/part)*el.detailData?.tarmecIn)}px`,marginLeft:`${((Number(trackWidth)/part)*(el.detailData?.subMainBreakDown?.arrDelay<0?el.detailData?.tarmecIn:el.detailData?.subMainBreakDown?.arrDelay))}px`,backgroundColor:'#ff4d4d',border:'1px solid #b30000',borderRadius:'10px',opacity:0.5,height:'13px',marginTop:'3px'}}></div> */}
                              {/* <div style={{width:`${((Number(trackWidth)/part)*el.detailData?.conflictBoxStamp)-((Number(trackWidth)/part)*el.detailData?.tarmecIn)}px`,marginLeft:`${((Number(trackWidth)/part)*(el.detailData?.subMainBreakDown?.arrDelay<0?0:el.detailData?.subMainBreakDown?.arrDelay))}px`,backgroundColor:'#ff4d4d',border:'1px solid #b30000',borderRadius:'10px',opacity:0.5,height:'13px',marginTop:'3px'}}></div> */}
                              {/* <div style={{width:`${((Number(trackWidth)/part)*el.detailData?.conflictBoxStamp)-((Number(trackWidth)/part)*el.detailData?.tarmecIn)}px`,backgroundColor:'#ff4d4d',border:'1px solid #b30000',borderRadius:'10px',opacity:0.5,height:'13px',marginTop:'3px'}}></div> */}
                              <div style={{
                                width:`${(Number(trackWidth)/part)*(el.detailData?.stampOfConflict)*(el.detailData?.stampOfConflict<0?-1:1)}px`,
                                marginLeft:
                                // Date.UTC(Number(otherStartTime?.split('T')[0]?.split('-')[0]),Number(otherStartTime?.split('T')[0]?.split('-')[1]),Number(otherStartTime?.split('T')[0]?.split('-')[2]),Number(otherStartTime?.split('T')[1]?.split(':')[0]),Number(otherStartTime?.split('T')[1]?.split(':')[1]))>Date.UTC(Number(el?.detailData?.STA?.split('T')[0]?.split('-')[0]),Number(el?.detailData?.STA?.split('T')[0]?.split('-')[1]),Number(el?.detailData?.STA?.split('T')[0]?.split('-')[2]),Number(el?.detailData?.STA?.split('T')[1]?.split(':')[0]),Number(el?.detailData?.STA?.split('T')[1]?.split(':')[1]))?'0px':
                                `${((Number(trackWidth)/part)*el.detailData?.marginOfConflict)}px`,
                                backgroundColor:'#ff4d4d',border:'1px solid #b30000',borderRadius:'10px',opacity:0.5,height:'13px',marginTop:'3px'}}></div>
                            </div>}
                            <div>{el.detailData?.barType==="current"?<FlightSlot configLine={true} type={'current'} selectedFlight={selectedFlight} track={(Number(trackWidth) / part)} detailData={el.detailData} slotWidth={(Number(trackWidth) / part) * el.stamp}/>:
                            el.detailData?.barType==="other"?<FlightSlot configLine={true} type={"other"} selectedFlight={selectedFlight} track={(Number(trackWidth) / part)} detailData={el.detailData} slotWidth={(Number(trackWidth) / part) * el.stamp}/>:
                            el.detailData?.barType==="past"?<FlightSlot otherStartTime={otherStartTime} configLine={false} type={"past"} selectedFlight={selectedFlight} track={(Number(trackWidth) / part)} detailData={el.detailData} slotWidth={(Number(trackWidth) / part) * el.stamp}/>:
                            ''}
                            </div>
                          </div>
                          : (
                            // <HorizontalSlot view={'nonSlot'} bgColor={'#E2E2E2'} slotWidth={(1330/(part*interval))*el.stamp} slotHeight={2}/>
                            <HorizontalSlot
                              view={"nonSlot"}
                              bgColor={"#E2E2E2"}
                              slotWidth={(Number(trackWidth) / part) * el.stamp}
                              slotHeight={2}
                            />
                          )}
                        </>
                      );
                    })}
                </div>}
                </div>
              </div>
          }</>);
          })}
          </div>
      </div>}
    </>
  );
};
export default GanttShowView;
