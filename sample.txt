FocusFlight Component
    ✕ should render the correct title when in detail view (55 ms)
    ✓ should render DynamicRender with correct data (4 ms)
    ✕ should toggle detail view when clicking "Back" button (4 ms)
    ✕ should trigger flight feed click when the flight feed tab is clicked (6 ms)
    ✕ should handle task type tab click (5 ms)
    ✕ should handle activity type tab click (2 ms)
    ✕ should handle critical flag click (1 ms)
    ✕ should handle add notes click (1 ms)
    ✕ should handle next tab selection (3 ms)
    ✕ should handle previous tab selection (1 ms)
    ✕ should handle current tab selection (1 ms)

  ● FocusFlight Component › should render the correct title when in detail view

    TestingLibraryElementError: Unable to find an element with the text: /back/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="focus-flightContainer"
        >
          <div
            class="focus-flight-title-container"
          >
            <div
              class="focus-flight-title"
              data-testid="focus-flight-title"
            />
            <div
              class="focus-flight-close"
              data-testid="close-button"
            >
              <img
                style="width: 29px; height: 29px;"
              />
            </div>
          </div>
          <div
            style="padding-bottom: 20px;"
          >
            <div
              data-testid="flight-feed-tab"
            >
              <div
                data-testid="dynamic-render-mock"
              >
                Dynamic Render
              </div>
            </div>
          </div>
        </div>
      </div>
    </body>

      57 |  
      58 |     // Set the detail view state to true
    > 59 |     const backButton = screen.getByText(/back/i);
         |                               ^
      60 |     expect(backButton).toBeInTheDocument();
      61 |  
      62 |     // Ensure the "Back" button is shown by interacting with it

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (test/components/focusFlights/FocusFlight.test.tsx:59:31)

  ● FocusFlight Component › should toggle detail view when clicking "Back" button

    TestingLibraryElementError: Unable to find an element with the text: /back/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="focus-flightContainer"
        >
          <div
            class="focus-flight-title-container"
          >
            <div
              class="focus-flight-title"
              data-testid="focus-flight-title"
            />
            <div
              class="focus-flight-close"
              data-testid="close-button"
            >
              <img
                style="width: 29px; height: 29px;"
              />
            </div>
          </div>
          <div
            style="padding-bottom: 20px;"
          >
            <div
              data-testid="flight-feed-tab"
            >
              <div
                data-testid="dynamic-render-mock"
              >
                Dynamic Render
              </div>
            </div>
          </div>
        </div>
      </div>
    </body>

      83 |     );
      84 |  
    > 85 |     const backButton = screen.getByText(/back/i);
         |                               ^
      86 |  
      87 | fireEvent.click(backButton); // Click the "Back" button
      88 |  

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (test/components/focusFlights/FocusFlight.test.tsx:85:31)

  ● FocusFlight Component › should trigger flight feed click when the flight feed tab is clicked

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: true

    Number of calls: 0

      113 |  
      114 |     // Check that setFlightFeedClick and setFocusClick were called with the correct arguments
    > 115 |     expect(setFlightFeedClickMock).toHaveBeenCalledWith(true);
          |                                    ^
      116 |     expect(setFocusClickMock).toHaveBeenCalledWith(false);
      117 |   });
      118 |  

      at Object.<anonymous> (test/components/focusFlights/FocusFlight.test.tsx:115:36)

  ● FocusFlight Component › should handle task type tab click

    TestingLibraryElementError: Unable to find an element by: [data-testid="task-type-tab"]

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="focus-flightContainer"
        >
          <div
            class="focus-flight-title-container"
          >
            <div
              class="focus-flight-title"
              data-testid="focus-flight-title"
            />
            <div
              class="focus-flight-close"
              data-testid="close-button"
            >
              <img
                style="width: 29px; height: 29px;"
              />
            </div>
          </div>
          <div
            style="padding-bottom: 20px;"
          >
            <div
              data-testid="flight-feed-tab"
            >
              <div
                data-testid="dynamic-render-mock"
              >
                Dynamic Render
              </div>
            </div>
          </div>
        </div>
      </div>
    </body>

      125 |  
      126 |     // Simulate task type tab click
    > 127 |     const taskTypeTab = screen.getByTestId('task-type-tab'); // Adjust the test id as needed
          |                                ^
      128 | fireEvent.click(taskTypeTab);
      129 |  
      130 |     // Add assertions to check if the state is updated correctly

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (test/components/focusFlights/FocusFlight.test.tsx:127:32)

  ● FocusFlight Component › should handle activity type tab click

    TestingLibraryElementError: Unable to find an element by: [data-testid="activity-type-tab"]

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="focus-flightContainer"
        >
          <div
            class="focus-flight-title-container"
          >
            <div
              class="focus-flight-title"
              data-testid="focus-flight-title"
            />
            <div
              class="focus-flight-close"
              data-testid="close-button"
            >
              <img
                style="width: 29px; height: 29px;"
              />
            </div>
          </div>
          <div
            style="padding-bottom: 20px;"
          >
            <div
              data-testid="flight-feed-tab"
            >
              <div
                data-testid="dynamic-render-mock"
              >
                Dynamic Render
              </div>
            </div>
          </div>
        </div>
      </div>
    </body>

      140 |  
      141 |     // Simulate activity type tab click
    > 142 |     const activityTypeTab = screen.getByTestId('activity-type-tab'); // Adjust the test id as needed
          |                                    ^
      143 | fireEvent.click(activityTypeTab);
      144 |  
      145 |     // Add assertions to check if the state is updated correctly

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (test/components/focusFlights/FocusFlight.test.tsx:142:36)

  ● FocusFlight Component › should handle critical flag click

    TestingLibraryElementError: Unable to find an element by: [data-testid="critical-flag"]

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="focus-flightContainer"
        >
          <div
            class="focus-flight-title-container"
          >
            <div
              class="focus-flight-title"
              data-testid="focus-flight-title"
            />
            <div
              class="focus-flight-close"
              data-testid="close-button"
            >
              <img
                style="width: 29px; height: 29px;"
              />
            </div>
          </div>
          <div
            style="padding-bottom: 20px;"
          >
            <div
              data-testid="flight-feed-tab"
            >
              <div
                data-testid="dynamic-render-mock"
              >
                Dynamic Render
              </div>
            </div>
          </div>
        </div>
      </div>
    </body>

      155 |  
      156 |     // Simulate critical flag click
    > 157 |     const criticalFlag = screen.getByTestId('critical-flag'); // Adjust the test id as needed
          |                                 ^
      158 | fireEvent.click(criticalFlag);
      159 |  
      160 |     // Add assertions to check if the critical flag is handled correctly

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (test/components/focusFlights/FocusFlight.test.tsx:157:33)

  ● FocusFlight Component › should handle add notes click

    TestingLibraryElementError: Unable to find an element by: [data-testid="add-notes-button"]

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="focus-flightContainer"
        >
          <div
            class="focus-flight-title-container"
          >
            <div
              class="focus-flight-title"
              data-testid="focus-flight-title"
            />
            <div
              class="focus-flight-close"
              data-testid="close-button"
            >
              <img
                style="width: 29px; height: 29px;"
              />
            </div>
          </div>
          <div
            style="padding-bottom: 20px;"
          >
            <div
              data-testid="flight-feed-tab"
            >
              <div
                data-testid="dynamic-render-mock"
              >
                Dynamic Render
              </div>
            </div>
          </div>
        </div>
      </div>
    </body>

      170 |  
      171 |     // Simulate add notes click
    > 172 |     const addNotesButton = screen.getByTestId('add-notes-button'); // Adjust the test id as needed
          |                                   ^
      173 | fireEvent.click(addNotesButton);
      174 |  
      175 |     // Add assertions to check if the add notes functionality is handled correctly

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (test/components/focusFlights/FocusFlight.test.tsx:172:35)

  ● FocusFlight Component › should handle next tab selection

    TestingLibraryElementError: Unable to find an element by: [data-testid="next-tab-button"]

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="focus-flightContainer"
        >
          <div
            class="focus-flight-title-container"
          >
            <div
              class="focus-flight-title"
              data-testid="focus-flight-title"
            />
            <div
              class="focus-flight-close"
              data-testid="close-button"
            >
              <img
                style="width: 29px; height: 29px;"
              />
            </div>
          </div>
          <div
            style="padding-bottom: 20px;"
          >
            <div
              data-testid="flight-feed-tab"
            >
              <div
                data-testid="dynamic-render-mock"
              >
                Dynamic Render
              </div>
            </div>
          </div>
        </div>
      </div>
    </body>

      185 |  
      186 |     // Simulate next tab selection
    > 187 |     const nextTabButton = screen.getByTestId('next-tab-button'); // Adjust the test id as needed
          |                                  ^
      188 | fireEvent.click(nextTabButton);
      189 |  
      190 |     // Add assertions to check if the next tab is selected correctly

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (test/components/focusFlights/FocusFlight.test.tsx:187:34)

  ● FocusFlight Component › should handle previous tab selection

    TestingLibraryElementError: Unable to find an element by: [data-testid="prev-tab-button"]

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="focus-flightContainer"
        >
          <div
            class="focus-flight-title-container"
          >
            <div
              class="focus-flight-title"
              data-testid="focus-flight-title"
            />
            <div
              class="focus-flight-close"
              data-testid="close-button"
            >
              <img
                style="width: 29px; height: 29px;"
              />
            </div>
          </div>
          <div
            style="padding-bottom: 20px;"
          >
            <div
              data-testid="flight-feed-tab"
            >
              <div
                data-testid="dynamic-render-mock"
              >
                Dynamic Render
              </div>
            </div>
          </div>
        </div>
      </div>
    </body>

      200 |  
      201 |     // Simulate previous tab selection
    > 202 |     const prevTabButton = screen.getByTestId('prev-tab-button'); // Adjust the test id as needed
          |                                  ^
      203 | fireEvent.click(prevTabButton);
      204 |  
      205 |     // Add assertions to check if the previous tab is selected correctly

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (test/components/focusFlights/FocusFlight.test.tsx:202:34)

  ● FocusFlight Component › should handle current tab selection

    TestingLibraryElementError: Unable to find an element by: [data-testid="curr-tab-button"]

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="focus-flightContainer"
        >
          <div
            class="focus-flight-title-container"
          >
            <div
              class="focus-flight-title"
              data-testid="focus-flight-title"
            />
            <div
              class="focus-flight-close"
              data-testid="close-button"
            >
              <img
                style="width: 29px; height: 29px;"
              />
            </div>
          </div>
          <div
            style="padding-bottom: 20px;"
          >
            <div
              data-testid="flight-feed-tab"
            >
              <div
                data-testid="dynamic-render-mock"
              >
                Dynamic Render
              </div>
            </div>
          </div>
        </div>
      </div>
    </body>

      215 |  
      216 |     // Simulate current tab selection
    > 217 |     const currTabButton = screen.getByTestId('curr-tab-button'); // Adjust the test id as needed
          |                                  ^
      218 | fireEvent.click(currTabButton);
      219 |  
      220 |     // Add assertions to check if the current tab is selected correctly

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
