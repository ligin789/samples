 <div style={{ paddingLeft: 15 }}>
                {
                  !isCateogorySelected ?
                    <div>
                      {settingsData?.map((item: any, index: any) => {
                        return (
                          <div className="settingsRow" onClick={() => handleCategoryClick(item.subCategory)}>
                            <label className="categoryList">{item.category}</label>
                            <div style={{ marginRight: "17px" }}>
                              <div style={{ color: "#FFFFFF", cursor: "pointer" }} >&#10095;</div>

                            </div>
                          </div>
                        )
                      })}
                      <div className="DoneButton" onClick={doneHandle}>
                        <label className="DoneLabel">Done</label>
                      </div>
                      <div className="CancelButton" onClick={() => setSelectedView("defaultView")}>
                        <label className="CancelLabel">Cancel</label>
                      </div>
                    </div>
                    :
                    selectedCategoryData && selectedCategoryData.map((itemData: any, index: any) => {
                      return (
                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: "space-between", alignItems: "center", borderBottom: "1px solid #405287", paddingBottom: "7px" }}>
                          <span className="subCategoryLabel">{itemData.category} </span>
                          <label className={`subCategorySwitch ${itemData.isSelected ? "subCategoryChecked" : ""}`} style={{ backgroundColor: itemData.isSelected ? Colors.white : Colors.common }}>
                            <input
                              type="checkbox"
                              checked={itemData.isSelected}
                              onChange={() => handleToggle(index)}
                            />
                            <span className="subCategorySlider" style={{ backgroundColor: itemData.isSelected ? Colors.common : Colors.white }}></span>
                          </label>
                        </div>
                      )
                    })


                }

              </div>




[
    { "category": "Flight Ops", isSelected: false, "subCategory": [{ "category": "sub category1", isSelected: false }, { "category": "sub category2", isSelected: false }, { "category": "sub category3", isSelected: false }] },
    { "category": "IRROPS", isSelected: false, "subCategory": [{ "category": "sub category2", isSelected: false }] },
    { "category": "Crew Ops", isSelected: false, "subCategory": [{ "category": "sub category3", isSelected: false }] },
    { "category": "Pax Ops", isSelected: false, "subCategory": [{ "category": "sub category4", isSelected: false }] },
    { "category": "Ops Restrictions", isSelected: false, "subCategory": [{ "category": "sub category5", isSelected: false }] },
    { "category": "Ops Milestones", isSelected: false, "subCategory": [{ "category": "sub category5", isSelected: false }] },

  ]
