import React, { useEffect, useRef, useState } from "react";
import mapboxgl from "mapbox-gl";
import { MapboxOverlay } from "@deck.gl/mapbox";
import { ScatterplotLayer, ArcLayer } from "@deck.gl/layers";
import "mapbox-gl/dist/mapbox-gl.css";
 
const MapComponent = () => {
  const mapContainer = useRef(null);
  const map = useRef(null);
  const [layerArc, setLayerArc] = useState(null);
 
  const arcData = [
    {
      source: [76.391948, 10.155136],
      destination: [76.921474, 8.482045],
    },
  ];
 
  useEffect(() => {
    mapboxgl.accessToken =
      "pk.eyJ1IjoiYW1pdGVlMDAwNyIsImEiOiJja3psM2R0ZjIxMWxrMm5sbGRudmN0emg3In0.5gZOlrQvnEdpuByBTINgDw";
 
    map.current = new mapboxgl.Map({
      container: mapContainer.current,
      style: "mapbox://styles/mapbox/satellite-streets-v9",
      zoom: 11,
      center: [76.391948, 10.155136],
      maxZoom: 21,
      pitch: 60,
      antialias: true,
    });
 
    map.current.on("load", () => {
      const scatterLayer = new MapboxOverlay({
        id: "scatterplot-layer",
        data: arcData,
        type: ScatterplotLayer,
        opacity: 0.8,
        stroked: true,
        filled: true,
        radiusScale: 6,
        radiusMinPixels: 1,
        radiusMaxPixels: 100,
        lineWidthMinPixels: 3,
        getPosition: (d) => d.destination,
        getRadius: (d) => 6,
        getFillColor: (d) => [184, 134, 11],
        getLineColor: (d) => [222, 0, 130],
      });
 
      map.current.addLayer(scatterLayer);
 
      const arcLayer = new MapboxOverlay({
        id: "arc-layer",
        data: arcData,
        type: ArcLayer,
        getWidth: 7,
        getSourcePosition: (d) => d.source,
        getTargetPosition: (d) => d.destination,
        getSourceColor: (d) => [220, 20, 60],
        getTargetColor: (d) => [0, 0, 139],
      });
 
      setLayerArc(arcLayer);
    });
  }, []);
 
  const display2dBuilding = () => {
    if (map.current.getLayer("arc-layer")) {
      map.current.removeLayer("arc-layer");
    }
  };
 
  const display3dBuilding = () => {
    if (layerArc && !map.current.getLayer("arc-layer")) {
      map.current.addLayer(layerArc);
    }
  };
 
  return (
    <div>
      <div ref={mapContainer} style={{ width: "100%", height: "100vh" }} />
      <button
        onClick={display2dBuilding}
        style={{ position: "fixed", top: 20, right: 10, zIndex: 10000, fontSize: 30 }}
      >
        2D View
      </button>
      <button
        onClick={display3dBuilding}
        style={{ position: "fixed", top: 70, right: 10, zIndex: 10000, fontSize: 30 }}
      >
        3D View
      </button>
    </div>
  );
};
 
export default MapComponent;



mapbox-gl.js?v=89553ea2:1459 The map container element should be empty, otherwise the map's interactivity will be negatively impacted. If you want to display a message when WebGL is not supported, use the Mapbox GL Supported plugin instead.

2
mapbox-gl.js?v=89553ea2:1843 Error: IDs can't be empty.
    at Map._isValidId (mapbox-gl.js?v=89553ea2:29112:52)
    at Map.addLayer (mapbox-gl.js?v=89553ea2:29192:25)
    at Map.<anonymous> (App.tsx:51:19)
    at Map.fire (mapbox-gl.js?v=89553ea2:1838:39)
    at Map._render (mapbox-gl.js?v=89553ea2:29430:957)
    at mapbox-gl.js?v=89553ea2:29534:76
