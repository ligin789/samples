import {  put, takeLatest } from "redux-saga/effects"
import  { APIcall } from "../../environments/Service"
import { processMapper } from "./helper";


function* getProcessAnalyticsData({ payload }: any) {
  yield put({ type: "UPDATE_LOADING", payload: true })
  let response = yield APIcall(
    'POST',  
    'https://iwmazucwf6.execute-api.ap-south-1.amazonaws.com/demo/fetch',
    payload
  )
 
  if (response.status == 200 || response.status == 304) {
    if (response?.data?.hasOwnProperty('status') && response.data.status != 200) {
      if (response.data.status === 401 || response.data.status === 403) {
        // alert('Session/Token expired. Redirecting to login Screen..')
        yield put({
          type: 'UPDATE_ALERT', payload: {
            title: 'Session Timeout',
            content: 'Login to start a new session'
          }
        })
        
      }
      yield put({
        type: 'UPDATE_ALERT', payload: {
          title: 'Alert',
          content: 'Oops, something went wrong. Please try again later.'
        }
      })
      yield put({ type: "UPDATE_LOADING", payload: false })
    } else {
      yield put({ type: "UPDATE_LOADING", payload: false })
      yield put({ type: "SAVE_PROCESS_ANALYTICS_DATA", payload: processMapper(response.data) })
      // yield put({ type: "SAVE_PROCESS_ANALYTICS_DATA", payload: response.data })
    }

  } else if (response?.response?.status === 401 || response?.response?.status === 403) {
    yield put({
      type: 'UPDATE_ALERT', payload: {
        title: 'Session Timeout',
        content: 'Login to start a new session'
      }
    })
    
  } else {
    yield put({
      type: 'UPDATE_ALERT', payload: {
        title: 'Alert',
        content: 'Oops, something went wrong. Please try again later.'
      }
    })
  }
}

export function* processAnalyticsListener() {
  yield takeLatest('GET_PROCESS_ANALYTICS_DATA', getProcessAnalyticsData)
}
