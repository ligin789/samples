import React, {useState } from "react";
import DynamicRender from "../dynamicrenderer";
import NotificationJson from "../../assets/jsons/notification.json";

const Notification = (props: any) => {
  const [jsonData, setJsonData] = useState(NotificationJson);
  const mapFunctions = {
    closeButtonClick: () => {
      props.setNotificationClick(false);
    },
    acknowledgeIconClick: (data: any) => {
      let { widgetAttributes } = data;
      widgetAttributes.acknowledgeIconClicked = true;
      setJsonData(widgetAttributes);
    },
    snoozeIconClick: (data: any) => {
      let { widgetAttributes } = data;
      let array: any = jsonData;
      const arrayWidgetAttributes = array.widgetAttributes.list.map(
        (element: any) => {
          if (element.id === widgetAttributes.id) {
            element.snoozeIconClicked = true;
          }
          return element;
        }
      );
      array.widgetAttributes.list = arrayWidgetAttributes;
      setJsonData({ ...array });
    },
    timeButton: (data: any) => {
      let { widgetAttributes } = data;
      let array: any = jsonData;
      const arrayWidgetAttributes = array.widgetAttributes.list.map(
        (element: any) => {
          if (element.id === widgetAttributes.id) {
            element.snoozeIconClicked = false;
          }
          element.reminderList = element.reminderList.map(
            (remainderElement: any) => {
              remainderElement.isSelected =
                remainderElement.timeValue === widgetAttributes.timeValue;
              return remainderElement;
            }
          );
          return element;
        }
      );
      array.widgetAttributes.list = arrayWidgetAttributes;
      setJsonData({ ...array });
    },
    resolveButton: () => {
      console.log("resolveButtonClicked");
    },
  };
  return (
    <div style={{ position: "absolute", zIndex: 5, top: "18%", right: 0 }}>
      {jsonData && (
        <DynamicRender data={NotificationJson} mappedFunctions={mapFunctions} />
      )}
    </div>
  );
};

export default Notification;
