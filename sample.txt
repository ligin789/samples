import axios from "axios";

const getHeaders = () => ({
    'Content-type': 'application/json',
   
})

class Service {
    async request(options: any,requestOptions:any={}) {
        try {
            let response: any
            await axios(options,requestOptions)
                .then((res:any) => {
                    response = res
                })
                .catch((error:any) => {
                    console.log("get Data Error",error.message);
                    response = error
                })
            return response
        } catch (err) {
            console.log(err);
        }
    }
    async get(url: any) {
        const options = {
            url,
            method: 'GET',
            headers: getHeaders()
        }
        return this.request(options,{})
    }
    async post(url: any, body: any, optional: any = '',requestOptions:any={}) {
        const options: any = {
            url,
            method: 'POST',
            headers: getHeaders(),
            data: JSON.stringify(body)
        }
        if (optional?.toLowerCase() == 'blob') {
            options.responseType = optional
        }
        return await this.request(options,requestOptions)
    }
}

export default new Service()

export async function APIcall( method: any, uri: any, payload = {}, responseType: any = '', requestOptions:any={}) {
    const instance = new Service()
    if (method.toUpperCase() == 'POST') {
        return await instance.post(uri, payload, responseType,requestOptions)
    }
    else {
        return await instance.get(uri)
    }
}
