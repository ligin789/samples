import React, { useEffect, useState } from "react";
import CriticalJson from "../../assets_Air_India/jsons/criticalFlight.json";
import DynamicRender from "../dynamicrenderer";
import "../../screens/home/styles.css";
import { connect } from "react-redux";
import { referenceViewAction } from "../../redux/referenceData/action";
 
const CriticalPopUp = (props: any) => {
  const [jsonData, setJsonData] = useState({})
  useEffect(() => {
    props.getWidgetDetails()
  }, [])
 
  useEffect(() => {
    setJsonData(props?.criticalWidgetDetails)
  }, [props?.criticalWidgetDetails])
 
  const mapFunctions = {
    closeButtonClick: () => {
      props.setCriticalPopupVisible(false);
    },
    cancelButtonClick: () => {
      props.setCriticalPopupVisible(false);
    },
    doneButtonClick: () => {
      props.setCriticalPopupVisible(false);
    },
  };
  return (
    <div style={{ position: "absolute", zIndex: 10, left: "35%", top: "28%" }}>
      <DynamicRender data={CriticalJson} mappedFunctions={mapFunctions} />
    </div>
  );
 
}
const mapStateToProps = (state: any) => ({
  criticalWidgetDetails: state?.HomeScreenReducer?.criticalWidgetDetails
 
})
const mapDispatchToProps = {
  getWidgetDetails: referenceViewAction.getCriticalWidgetDetails
}
 
export default connect(mapStateToProps, mapDispatchToProps)(CriticalPopUp);
