import React, { useEffect, useRef } from "react";
import mapboxgl from "mapbox-gl";
import { ScatterplotLayer, ArcLayer } from "@deck.gl/layers";
import { MapboxOverlay } from "@deck.gl/mapbox";
import "mapbox-gl/dist/mapbox-gl.css";
import "./styles.css";
 
const arcData = [
  {
    source: [76.391948, 10.155136],
    destination: [-81.328697,29.021050],
  },
  {
    source: [76.391948, 10.155136],
    destination: [78.634644, 15.082732],
  },
];
 
const MapWithDeckGL: React.FC = () => {
  const mapContainer = useRef<HTMLDivElement>(null);
  const mapRef = useRef<mapboxgl.Map | null>(null);
  const overlayRef = useRef<MapboxOverlay | null>(null);
 
  useEffect(() => {
    mapboxgl.accessToken =
      "pk.eyJ1IjoicHJhdmVlbmFtYmFkeSIsImEiOiJjbGkyd3FlazgwOXpuM2puMGFjZjJxNTg2In0.AmDB8VR5ARnytVldY_dZdQ";
 
    const map = new mapboxgl.Map({
      container: mapContainer.current as HTMLDivElement,
      style: "mapbox://styles/mapbox/dark-v10",
      zoom: 3,
      center: [76.391948, 10.155136],
      maxZoom: 21,
      pitch: 60,
    });
 
    mapRef.current = map;
 
//     const text = document.createElement("div");
//     text.innerText = "My Location";
// text.style.fontSize = "20px";
// text.style.color = "red";
 
//     new mapboxgl.Marker(text)
//       .setLngLat([76.391948, 10.155136])
//       .addTo(map);
 
    const scatterLayer = new ScatterplotLayer({
      id: "scatterplot-layer",
      data: arcData,
      opacity: 0.8,
      stroked: true,
      filled: true,
      radiusScale: 6,
      radiusMinPixels: 1,
      radiusMaxPixels: 100,
      lineWidthMinPixels: 3,
      getPosition: (d: any) => d.destination,
      getRadius: () => 6,
      getFillColor: () => [184, 134, 11],
      getLineColor: () => [222, 0, 130],
    });
 
    const arcLayer = new ArcLayer({
      id: "arc-layer",
      data: arcData,
      getWidth: 4,
      getSourcePosition: (d: any) => d.source,
      getTargetPosition: (d: any) => d.destination,
      getSourceColor: () => [220, 20, 60],
      getTargetColor: () => [0, 0, 139],
    });
 
    const overlay = new MapboxOverlay({
      layers: [scatterLayer, arcLayer],
    });
 
    overlayRef.current = overlay;
    map.addControl(overlay);
 
    return () => map.remove();
  }, []);
 
  return (
    <div style={{ position: "relative", height: "100vh" }}>
      {/* Header */}
      <header
       className="first-header"
      >
       <div className="inner-header">
        <i className="inner-text">00:01 UTC 14 NOV 23 | 08:01 SGT 14 NOV 23</i>
       </div>
      </header>
 
      {/* Map Container */}
      <div
        ref={mapContainer}
        style={{
          position: "absolute",
          top: 0,
          left: 0,
          width: "100%",
          height: "100vh",
          zIndex: 0,
        }}
      />
    </div>
  );
};
 
export default MapWithDeckGL;


@font-face {
  font-family: "SF Pro";
  src: url("../../assets/fonts/SF-Pro.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

input[type="checkbox"]:checked {
  accent-color: #00185f;
}

@font-face {
  font-family: "SF Pro";
  src: url("../../assets/fonts/SFPro-Medium.ttf") format("truetype");
  font-weight: medium;
  font-style: normal;
}

@font-face {
  font-family: "SF Pro Display";
  src: url("../../assets/fonts/SFPro-Medium.ttf") format("truetype");
  font-weight: medium;
  font-style: normal;
}
html,
body,
#root,
#map {
  width: 100%;
  height: 100vh;
  margin: 0;
  padding: 0;
  background: #ccc; /* Add background to see if container is there */
}
.first-header {
  position: "absolute";
  top: 0;
  left: 0;
  z-index: 1000;
  width: 100%;
  height: 40px;
}

.inner-header {
  background: transparent linear-gradient(90deg, #ffffffcc 0%, #ffffff00 100%)
    0% 0% no-repeat padding-box;
  opacity: 1;
  
}
.inner-text {
  color: #000000;
  text-align: right;
  font: normal normal normal 13px/15px SF Pro;
  letter-spacing: 0px;
  color: #000000;
  text-transform: uppercase;
  opacity: 1;
}
