 requestProvisionalFuel
      ✕ should make successful API call (1 ms)
      ✕ should handle API error
    getMonitoringDataProvisionalFuel
      ✕ should handle successful data fetching
      ✕ should handle failed data fetching (1 ms)

  ● ProvFuel SAGAS › requestProvisionalFuel › should make successful API call

    TypeError: _getAuth.getItem.mockReturnValue is not a function

      118 |       };
      119 |       const mockResponse = { data: ProvisionalFuelData };
    > 120 |       getItem.mockReturnValue("test-token");
          |               ^
      121 |       service.get.mockResolvedValue(mockResponse);
      122 |  
      123 |       const result = await requestProvisionalFuel(payload);

      at _callee$ (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:120:15)
      at tryCatch (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at Generator.<anonymous> (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at Generator.next (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at asyncGeneratorStep (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at _next (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1
      at Object.<anonymous> (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)

  ● ProvFuel SAGAS › requestProvisionalFuel › should handle API error

    TypeError: _getAuth.getItem.mockReturnValue is not a function

      140 |       };
      141 |       const mockError = new Error("API Error");
    > 142 |       getItem.mockReturnValue("test-token");
          |               ^
      143 |       service.get.mockRejectedValue(mockError);
      144 |       errorHandler.mockReturnValue("Processed error");
      145 |  

      at _callee2$ (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:142:15)
      at tryCatch (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at Generator.<anonymous> (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at Generator.next (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at asyncGeneratorStep (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at _next (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1
      at Object.<anonymous> (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)

  ● ProvFuel SAGAS › getMonitoringDataProvisionalFuel › should handle successful data fetching

    TypeError: _service.default.get.mockResolvedValue is not a function

      163 |       const dispatchedActions = [];
      164 |       
    > 165 |       service.get.mockResolvedValue(mockResponse);
          |                   ^
      166 |       await runSaga(
      167 |         {
      168 |           dispatch: (action) => dispatchedActions.push(action),

      at _callee3$ (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:165:19)
      at tryCatch (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at Generator.<anonymous> (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at Generator.next (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at asyncGeneratorStep (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at _next (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1
      at Object.<anonymous> (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)

  ● ProvFuel SAGAS › getMonitoringDataProvisionalFuel › should handle failed data fetching

    TypeError: _service.default.get.mockRejectedValue is not a function

      188 |       const dispatchedActions = [];
      189 |       
    > 190 |       service.get.mockRejectedValue(mockError);
          |                   ^
      191 |       errorHandler.mockReturnValue("Processed error");
      192 |       
      193 |       await runSaga(

      at _callee4$ (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:190:19)
      at tryCatch (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at Generator.<anonymous> (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at Generator.next (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at asyncGeneratorStep (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at _next (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
      at src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1
      at Object.<anonymous> (src/store/ProvisionalFuelData/ProvisionalFuelStore.test.js:2:1)
