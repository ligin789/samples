import { call, put, takeLatest } from "redux-saga/effects";
import Constants from "../../global/Constants";
import { APIcall } from "../../environments/Service";

export const referenceViewAction = {
  referenceDataRequest: () => {
    return {
      type: Constants.GET_REFERENCE_DATA_REQUEST,
    }
  },
  referenceDataSuccess: (payload: any) => ({
    type: Constants.GET_REFERENCE_DATA_SUCCESS,
    payload,
  }),
  referenceDataFailure: (error: string) => ({
    type: Constants.GET_REFERENCE_DATA_FAILURE,
    error,
  }),
  getGridData: (data: any) => {
    return { type: "GET_GRID_DATA", data }
  },
  getGridByText: (data: any) => {
    return { type: "GET_GRID_DATA_BY_TEXT", data }
  },
  clearPatternSearchError: () => {
    return { type: 'UPDATE_SEARCH_BY_PATTERN_STATUS', payload: false }
  },
  updatePatternSearchStatus: () => {
    return { type: 'UPDATE_SEARCH_BY_PATTERN_COMPLETE_STATUS', payload: false }
  },
  updateLoaderStatus: (value: boolean) => {
    return { type: 'UPDATE_DATA_LOADER_STATUS', payload: value }
  },
  getCriticalWidgetDetails: () => {
    return { type: "GET_CRITICAL_WIDGET_DETAILS" }
  },
  retrieveMgtData: () => {
    return { type: "RETRIEVE_MGT_DATA" }
  },
  insertMgtData: (data: any) => {
    return { type: "INSERT_MGT_DATA", payload: data }
  },
  updateMgtData: (data: any) => {
    return { type: "UPDATE_MGT_DATA", payload: data }
  },
  retrieveAirportData: () => {
    return { type: 'RETRIEVE_AIRPORT_DATA' }
  },
  insertAirportData: (data: any) => {
    return { type: "INSERT_AIRPORT_DATA", payload: data }
  },
  updateAirportData: (data: any) => {
    return { type: "UPDATE_AIRPORT_DATA", payload: data }
  },
  markCritical: (data: any) => {
    return { type: "MARK_CRITICAL", payload: data }
  },
  removeCritical: (data: any) => {
    return { type: "REMOVE_CRITICAL", payload: data }
  },
  retrievePaxMctData: () => {
    return { type: "RETRIEVE_PAX_MCT" }
  },
  retrieveCrewMctData: () => {
    return { type: "RETRIEVE_CREW_MCT" }
  },
  insertPaxData: (data: any) => {
    return { type: "INSERT_PAX_DATA", payload: data }
  },
  insertCrewData: (data: any) => {
    return { type: "INSERT_CREW_DATA", payload: data }
  },
  updateCrewData: (data: any) => {
    return { type: "UPDATE_CREW_DATA", payload: data }
  },
  updatePaxData: (data: any) => {
    return { type: "UPDATE_PAX_DATA", payload: data }
  },
  deleteMgtData: (data: any) => {
    return { type: "DELETE_MGT_DATA", payload: data }
  },
  deleteAirportData: (data: any) => {
    return { type: "DELETE_AIRPORT_DATA", payload: data }
  },
  deletePaxData: (data: any) => {
    return { type: "DELETE_PAX_DATA", payload: data }
  },
  deleteCrewData: (data: any) => {
    return { type: "DELETE_CREW_DATA", payload: data }
  }
};

// Worker Saga: Handles the API call
export function* fetchReferenceData(): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferencedata/getReferenceData", {
      referenceDataType: [
        "shortcut_keys",
        "search_filters",
        "grid_columns",
        "arrivalStations",
        "departureStations",
        "period",
      ],
    });
    console.log('fetch reference')
    if (response.status === 200) {
      yield put({ type: "SAVE_REFERENCE_DATA", payload: response.data });
    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (error: any) {

  }
}

export function* fetchGridData({ data }: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/gridview/searchbyfilters", data, '', { timeout: 10000 });
    if (response.status === 200) {
      yield put({ type: 'SAVE_GRID_DATA', payload: response.data })
    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {
    yield put({ type: 'UPDATE_DATA_LOADER_STATUS', payload: false })
  }
}

export function* fetchGridDataFromSearchText({ data }: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/gridview/searchbypattern", {
      "searchBy": {
        "pattern": data.text
      },
      "from": "0",
      "to": "10000",
      "orderBy": "scheduledDepartureUTC"
    }, '', { timeout: 10000 });
    if (response.status === 200) {
      if (!response.data.length) {
        yield put({ type: 'UPDATE_SEARCH_BY_PATTERN_STATUS', payload: true })
        yield put({ type: 'SAVE_GRID_DATA', payload: response.data })
        return
      }
      yield put({ type: 'UPDATE_SEARCH_BY_PATTERN_COMPLETE_STATUS', payload: true })
      yield put({ type: 'SAVE_GRID_DATA', payload: response.data })
    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {
    yield put({ type: 'UPDATE_DATA_LOADER_STATUS', payload: false })
  }
}
export function* getCriticalWidgetDetails({ data }: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/interaction/getFormWidget", {
      "interactionName": "CRITICAL FLIGHT",
      "filters": {}
    });
    if (response.status === 200) {
      if (!response.data.length) {
        yield put({ type: 'SAVE_CRITICAL_WIDGET', payload: response?.data })
      }
    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}
export function* getRetrievedMgtData(data: any): Generator<any> {

  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/retrivemgt");
    if (response.status === 200) {
      yield put({ type: 'SAVE_MGT_DATA', payload: response?.data })

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}
export function* insertMgtData(data: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/insertmgt",
      {
        "id": data?.payload?.aircraftType,
        "aircraftType": data?.payload?.aircraftType,
        "fseatCapacity": data?.payload?.fSeatsCapacity,
        "bseatCapacity": data?.payload?.bSeatsCapacity,
        "eseatCapacity": data?.payload?.eSeatsCapacity,
        "overallpayload": data?.payload?.overallPayload,
        "cargoPayload": data?.payload?.cargoPayload,
        "mgt": data?.payload?.MGT
      });
    console.log("insertmgtresponse")
    if (response.status === 200) {
      yield put({ type: 'CHECK_MGT_UPDATE', payload: true })
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}

export function* updateMgt(data: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/updatemgt",
      {
        "id": data?.payload?.aircraftType,
        "aircraftType": data?.payload?.aircraftType,
        "fseatCapacity": data?.payload?.fSeatsCapacity,
        "bseatCapacity": data?.payload?.bSeatsCapacity,
        "eseatCapacity": data?.payload?.eSeatsCapacity,
        "overallpayload": data?.payload?.overallPayload,
        "cargoPayload": data?.payload?.cargoPayload,
        "mgt": data?.payload?.MGT
      });
    if (response.status === 200) {
      yield put({ type: 'CHECK_MGT_UPDATE', payload: true })
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}
export function* getRetrievedAirportData(data: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/retriveairport");
    console.log("response ai", response)
    if (response.status === 200) {
      yield put({ type: 'SAVE_AIRPORT_DATA', payload: response?.data })

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}
export function* insertAirportData(data: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/insertairport",
      {
        "id": data?.payload?.iata,
        "iataCode": data?.payload?.iata,
        "Country": data?.payload?.country,
        "City": data?.payload?.city,
        "Airport": data?.payload?.airport,
        "icaoCode": data?.payload?.icao
      });
    if (response.status === 200) {
      yield put({ type: "CHECK_AIRPORT_DATA_UPDATE", payload: true })
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}
export function* updateAirportData(data: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/updateairport",
      {
        "id": data?.payload?.iata,
        "iataCode": data?.payload?.iata,
        "Country": data?.payload?.country,
        "City": data?.payload?.city,
        "Airport": data?.payload?.airport,
        "icaoCode": data?.payload?.icao
      });
    if (response.status === 200) {
      yield put({ type: "CHECK_AIRPORT_DATA_UPDATE", payload: true })
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}
export function* markCritical(data: any): Generator<any> {
  const{carrierCodeValue,flightNoValue,fromDate,toDate}=data?.payload
  const formattedFlightNo=flightNoValue.split("/")[0]
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/criticalcatalog/markcritical",
      {
        "carriercd": carrierCodeValue,
        "fltnumber":formattedFlightNo ,
        "department": "ADM",
        "fromDate": fromDate,
        "toDate": toDate
      });
    if (response.status === 200) {
      yield put({type:"CHECK_CRITICAL_UPDATE",payload:true})
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}
export function* removeCritical(data: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/criticalcatalog/removecritical",
      {
        "fltlegid": data?.payload,
        "department": "ADM"
      });
    if (response.status === 200) {
      yield put({type:"CHECK_CRITICAL_UPDATE",payload:true})
    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}

export function* retrievePaxMctData(data: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/retrivepax",);
    if (response.status === 200) {
      yield put({ type: 'SAVE_PAX_MCT_DATA', payload: response?.data })

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}

export function* retrieveCrewMctData(data: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/retrivecrew",);
    if (response.status === 200) {
      yield put({ type: 'SAVE_CREW_MCT_DATA', payload: response?.data })

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}
export function* insertPaxData(data: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/insertpax",
      {
        "mct": data?.payload?.mct,
        "arrstn": data?.payload?.arrStn,
        "depstn": data?.payload?.depStn,
        "conxstatus": data?.payload?.conxStatus,
        "arrcodeshareind": data?.payload?.arrCodeShareIND,
        "arrcodeshareop": data?.payload?.arrCodeShareOP,
        "arrfltrangestart": data?.payload?.arrFltRangeStart,
        "arrfltrangeend": data?.payload?.arrFltRangeEnd,
        "depcarrier": data?.payload?.depCarrier,
        "depcodeshareind": data?.payload?.depCodeShareIND,
        "depcodeshareop": data?.payload?.depCodeShareOP,
        "depfltrangestart": data?.payload?.depFltRangeStart,
        "depfltrangeend": data?.payload?.depFltRangeEnd,
        "nextcountry": data?.payload.nextCountry,
        "prevcountry": data?.payload?.prevCountry,
        "efffrom": data?.payload?.effFrom,
        "effto": data?.payload?.effTo,
        "arrCarrier":data?.payload?.arrCarrier,
        "arrTerminal":data?.payload?.arrTerminal,
        "depTerminal":data?.payload?.depTerminal
      });
    if (response.status === 200) {
      yield put({ type: "CHECK_PAX_DATA_UPDATE", payload: true })
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}

export function* insertCrewData(data: any): Generator<any> {
  const { mct, crewType, arrStn, conxStatus, depStn, rangeStart, rangeEnd, effFrom, effTo, arrTerminal, depTerminal } = data?.payload
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/insertcrew",
      {
        "mct": mct,
        "arrstn": arrStn,
        "depstn": depStn,
        "conxstatus": conxStatus,
        "crewtype": crewType,
        "efffrom": effFrom,
        "effto": effTo,
        "rangestart": rangeStart,
        "rangeend": rangeEnd,
        "arrterminal": arrTerminal,
        "depterminal": depTerminal
      });
    if (response.status === 200) {
      yield put({ type: "CHECK_CREW_DATA_UPDATE", payload: true })
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}
export function* updateCrewData(data: any): Generator<any> {
  const { mct, crewType, arrStn, conxStatus, depStn, rangeStart, rangeEnd, effFrom, effTo, arrTerminal, depTerminal, id } = data?.payload
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/updatecrew",
      {
        "id": id,
        "mct": mct,
        "arrstn": arrStn,
        "depstn": depStn,
        "conxstatus": conxStatus,
        "crewtype": crewType,
        "efffrom": effFrom,
        "effto": effTo,
        "rangestart": rangeStart,
        "rangeend": rangeEnd,
        "arrterminal": arrTerminal,
        "depterminal": depTerminal
      });
    if (response.status === 200) {
      yield put({ type: "CHECK_CREW_DATA_UPDATE", payload: true })
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}
export function* updatePaxData(data: any): Generator<any> {
  const { id, mct, arrStn, depStn, conxStatus, arrCarrier, arrCodeShareIND, arrCodeShareOP, arrFltRangeStart, arrFltRangeEnd, depCarrier, depCodeShareIND, depCodeShareOP: depCodeShareOP, depFltRangeStart: depFltRangeStart, depFltRangeEnd, prevCountry: prevCountry, nextCountry: nextCountry, effFrom: effFrom, effTo, arrTerminal, depTerminal } = data?.payload
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/updatepax",
      {
        "id": id,
        "mct": mct,
        "arrstn": arrStn,
        "depstn": depStn,
        "conxstatus": conxStatus,
        "arrcodeshareind": arrCodeShareIND,
        "arrcodeshareop": arrCodeShareOP,
        "arrfltrangestart": arrFltRangeStart,
        "arrfltrangeend": arrFltRangeEnd,
        "depcarrier": depCarrier,
        "depcodeshareind": depCodeShareIND,
        "depcodeshareop": depCodeShareOP,
        "depfltrangestart": depFltRangeStart,
        "depfltrangeend": depFltRangeEnd,
        "nextcountry": nextCountry,
        "prevcountry": prevCountry,
        "efffrom": effFrom,
        "effto": effTo,
        "arrCarrier":arrCarrier,
        "arrTerminal":arrTerminal,
        "depTerminal":depTerminal
      });
    if (response.status === 200) {
      yield put({ type: "CHECK_PAX_DATA_UPDATE", payload: true })
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}
export function* deleteMgtData(data: any): Generator<any> {
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/deletemgt",
      {"aircraftType": data?.payload });
    if (response.status === 200) {
      yield put({ type: 'CHECK_MGT_UPDATE', payload: true })
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}

export function* deleteAirportData(data:any):Generator<any>{
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/deleteairport",
      {
        "iataCode": data?.payload
      });
    if (response.status === 200) {
      yield put({ type: "CHECK_AIRPORT_DATA_UPDATE", payload: true })
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}

export function* deleteCrewData(data:any):Generator<any>{
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/deletecrew",
      {
        "id": data?.payload
      });
    if (response.status === 200) {
      yield put({ type: "CHECK_CREW_DATA_UPDATE", payload: true })
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}

export function* deletePaxData(data:any):Generator<any>{
  try {
    const response: any = yield call(APIcall, "Post", "https://if6dd1lc88.execute-api.ap-south-1.amazonaws.com/demo/uireferenceapp/deletepax",
      {
        "id": data?.payload
      });
    if (response.status === 200) {
      yield put({ type: "CHECK_PAX_DATA_UPDATE", payload: true })
      // yield put({type:'', payload:response?.data})

    } else {
      throw new Error(`Error: ${response.status}`);
    }
  } catch (err) {

  }
}


// Watcher Saga: Listens for the request action
export function* referenceDataSagaViewSaga() {
  yield takeLatest(Constants.GET_REFERENCE_DATA_REQUEST, fetchReferenceData)
  yield takeLatest("GET_GRID_DATA", fetchGridData)
  yield takeLatest("GET_GRID_DATA_BY_TEXT", fetchGridDataFromSearchText)
  yield takeLatest("GET_CRITICAL_WIDGET_DETAILS", getCriticalWidgetDetails)
  yield takeLatest("RETRIEVE_MGT_DATA", getRetrievedMgtData)
  yield takeLatest("INSERT_MGT_DATA", insertMgtData)
  yield takeLatest("UPDATE_MGT_DATA", updateMgt)
  yield takeLatest('RETRIEVE_AIRPORT_DATA', getRetrievedAirportData)
  yield takeLatest('INSERT_AIRPORT_DATA', insertAirportData)
  yield takeLatest("UPDATE_AIRPORT_DATA", updateAirportData)
  yield takeLatest("MARK_CRITICAL", markCritical)
  yield takeLatest("REMOVE_CRITICAL", removeCritical)
  yield takeLatest("RETRIEVE_PAX_MCT", retrievePaxMctData)
  yield takeLatest("RETRIEVE_CREW_MCT", retrieveCrewMctData)
  yield takeLatest("INSERT_PAX_DATA", insertPaxData)
  yield takeLatest("INSERT_CREW_DATA", insertCrewData)
  yield takeLatest("UPDATE_CREW_DATA", updateCrewData)
  yield takeLatest("UPDATE_PAX_DATA", updatePaxData)
  yield takeLatest("DELETE_MGT_DATA", deleteMgtData)
  yield takeLatest("DELETE_AIRPORT_DATA",deleteAirportData)
  yield takeLatest("DELETE_PAX_DATA",deletePaxData)
  yield takeLatest("DELETE_CREW_DATA",deleteCrewData)
}
