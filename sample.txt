import moment from 'moment';
import React from 'react';
import './style.css';
import { preparData } from './model';
import testData from './data.json'
import FlightSlot from './flightSlot';
const GanttView = (props:any)=>{
    const hours = 20
    const [interval,setInterval]=React.useState(30);
    const currentTime = '2025-03-03T20:10:00Z'
    const startTime = '2025-03-03T14:29:00Z'
    const currentTimeStamp = (Date.UTC(Number(currentTime?.split('T')[0]?.split('-')[0]),Number(currentTime?.split('T')[0]?.split('-')[1]),Number(currentTime?.split('T')[0]?.split('-')[2]),Number(currentTime?.split('T')[1]?.split(':')[0]),Number(currentTime?.split('T')[1]?.split(':')[1]))-Date.UTC(Number(startTime?.split('T')[0]?.split('-')[0]),Number(startTime?.split('T')[0]?.split('-')[1]),Number(startTime?.split('T')[0]?.split('-')[2]),Number(startTime?.split('T')[1]?.split(':')[0]),Number(startTime?.split('T')[1]?.split(':')[1])))/60000
    let endTime = moment(startTime,'YYYY-MM-DDTHH:mm:SS').add(hours,'hours').format('YYYY-MM-DDTHH:mm:SSZ')
    let timerArr :any= []

    const finalData = preparData(testData,startTime,endTime,currentTime)

    for (let i = 1; i <= (hours*60)/interval; i++) {
        timerArr.push(moment(startTime,'YYYY-MM-DDTHH:mm:SS').add(i*interval,'minutes').format('YYYY-MM-DDTHH:mm:SS'))
    }

    console.log(startTime,endTime,'check gantt view data ==> ',finalData)
    return(
        <div style={{width:'100%',height:`${window.innerHeight-190}px`,marginTop:'15px',overflow:'auto'}}>

            <div style={{width:'100%',height:`${(finalData.length*100)+60}px`,display:'flex'}}>
                <div style={{width:'10%',height:'100%'}}>
                    <div style={{width:'100%',height:'30px',display:'flex',justifyContent:'center',position:'sticky'}}>
                        <div style={{width:'80%',height:'27px',backgroundColor:'#00185F',color:'#FFFFFF',borderRadius:'15px',display:'flex',justifyContent:'space-evenly',font:'normal normal normal 15px/20px Roboto'}}>
                            <div style={{width:'15%',marginTop:'5px',cursor:'pointer'}} onClick={()=>{setInterval(interval+10)}}>&#43;</div>
                            <div style={{width:'55%',marginTop:'5px'}}>{`${interval} MIN`}</div>
                            <div style={{width:'15%',marginTop:'5px',cursor:'pointer'}} onClick={()=>{interval>30&&setInterval(interval-10)}}>&#45;</div>
                        </div>
                    </div>

                    {/* for aircrft no.  */}
                    {finalData?.length>0&&finalData.map((el:any)=>{
                        return(
                            <div style={{width:'100%',height:'100px',display:'flex',alignItems:'center'}}>
                                <div style={{width:'90%',marginLeft:'10%',backgroundColor:'#00185F',height:'35px',borderRadius:'20px',display:'flex',justifyContent:'center',alignItems:'center'}}>
                                    <div style={{font: 'normal normal normal 15px/20px Roboto',fontWeight:500,color:'#FFFFFF'}}>{el?.aircraftNo}</div>
                                </div>
                            </div>
                        )
                    })}
                </div>

                <div style={{width:'90%',height:'100%',overflowX:'scroll'}}>
                    <div style={{width:'0px',height:'0px'}}>
                        <div style={{marginLeft:`${currentTimeStamp*2}px`,height:`${(finalData?.length*100)+30}px`,borderRight:'2px dashed #097FFB'}}>
                            <div style={{position:'sticky',zIndex:1}}>
                                <div style={{width:'5px',height:'30px',borderRadius:'10px',marginLeft:'-1.5px',backgroundColor:'#097FFB'}}></div>
                            </div>
                        </div>
                    </div>
                    <div style={{width:`${hours*60*2}px`,height:'30px',position:'sticky'}}>
                        <div style={{width:`${hours*60*2}px`,height:'27px',backgroundColor:'#00185F',borderRadius:'15px',display:'flex'}}>
                            {timerArr?.length>0&&timerArr.map((el:any,i:number)=>{
                                if(timerArr?.length-1!=i){
                                    return(
                                        <div style={{width:`${interval*2}px`,height:'100%'}}>
                                            <div style={{position:'relative',color:'#FFFFFF',marginLeft:'40px',marginTop:'5px',font:'normal normal normal 15px/20px Roboto'}}>{`${moment(el,'YYYY-MM-DDTHH:mm:SS').format('HH:mm')}`}</div>
                                        </div>  
                                    )
                                }
                            })}
                        </div>
                    </div>

                    {/* for flight maping */}
                    {finalData?.length>0&&finalData.map((el:any)=>{
                        return(
                            <div style={{width:'100%',height:'100px'}}>
                                <div style={{width:`${hours*60*2}px`,height:'100px',display:'flex',alignItems:'center'}}>
                                    {el?.data?.length>0&&el.data.map((fl:any,index:number)=>{
                                        if(fl?.slot===false){
                                            return <div style={{width:`${fl?.stamp*2}px`,backgroundColor:'#BEBEBE',height:'3px'}}></div>
                                        }
                                        if(fl?.slot===true){
                                            return (
                                                <FlightSlot flightColor={'red'} flightWidth={fl?.stamp*2} data={fl} />
                                            )
                                        }
                                    })}
                                </div>
                            </div>
                        )
                    })}
                </div>
            </div>

            
        </div>
    )
}
export default GanttView;
