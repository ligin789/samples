import React, { useState } from "react";
import SliderImg from '../../assets/timeSlider.svg'

const TimeSlider = () => {
  const times = ["04:00","05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00"];
  const [sliderValue, setSliderValue] = useState(1);
  const startTime = 1;
  const endTime = 6;

  const handleChange = (e: any) => {
    setSliderValue(Number(e.target.value));
  };

  return (
    <div style={{ fontFamily: "Arial", maxWidth: 650, margin: "40px auto",border:"10px soild red"}}>
      <div style={{ position: "relative", height: "40px" }}>
        {/* Base white bar */}
        <div
          style={{
            position: "absolute",
            top: 10,
            left: 0,
            right: 0,
            height: "20px",
            background: "#fff",
            border: "1px solid #ccc",
            borderRadius: "10px",
            margin:"0px -10px",
            zIndex: 1,
          }}
        />

        {/* Colored range overlay */}
        <div
          style={{
            position: "absolute",
            top: 10,
            height: "20px",
            left: `${(startTime / (times.length - 1)) * 100}%`,
            width: `${((endTime - startTime) / (times.length - 1)) * 100}%`,
            background: "linear-gradient(to right, #f5cc8c, #f39688)",
            // borderRadius: "10px",
            zIndex: 2,
          }}
        />

        {/* Slider black bar */}
        <div
          style={{
            position: "absolute",
            top: 10,
            height: "20px",
            width: "6px",
            backgroundColor: "#007EDE",
            left: `calc(${(sliderValue / (times.length - 1)) * 100}% - 3px)`, // ← center line            transform: "translateX(-50%)",
            zIndex: 3,
          }}
        />

        {/* Time labels inside bar */}
        <div
          style={{
            position: "absolute",
            top: 12,
            left: 0,
            right: 0,
            display: "flex",
            justifyContent: "space-between",
            padding: "0 4px",
            fontSize: "12px",
            zIndex: 4,
            pointerEvents: "none", // <--- allow clicks to pass through
            color: "#333",
          }}
        >
          {times.map((time, idx) => (
            <span key={idx}>{time}</span>
          ))}
        </div>

        {/* Draggable slider input */}
        <input
          type="range"
          min={0}
          max={times.length - 1}
          step={1}
          value={sliderValue}
          onChange={handleChange}
          style={{
            position: "absolute",
            top: 10,
            width: "100%",
            height: "20px",
            background: "transparent",
            zIndex: 10, // always on top
            appearance: "none",
            WebkitAppearance: "none",
            cursor: "pointer",
          }}
        />

        {/* Hide thumb but keep draggable */}
        <style>{`
          input[type=range]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            background: transparent;
            cursor: pointer;
          }
          input[type=range]::-moz-range-thumb {
            width: 20px;
            height: 20px;
            background: transparent;
            cursor: pointer;
          }
        `}</style>
      </div>

      <div style={{ textAlign: "center", marginTop: 12, fontWeight: "bold" }}>
        Selected: {times[sliderValue]}
      </div>
    </div>
  );
};

export default TimeSlider;
