import { flightCardViewAction } from '../../store/flightcardview/action';
import './TwinButtonStyles.css'
import { useDispatch } from "react-redux";
const TwinButton = (props: any) => {
    const dispatch = useDispatch()
    const { styles = null, action = null, title = '', widgetData} = props;
    let tempPayload = JSON.parse(widgetData?.metadata)
    console.log('check widgetData ==>widgetData ',widgetData,tempPayload?.flight?.iaoAdvisedGate,tempPayload?.flight?.iaoOldGate)
    const events:any = {
        handlePublishAction:function(){
            dispatch(flightCardViewAction.widgetUpdate({
                "eventTimeUTC":new Date().toISOString(),
                "iaoAdvisedGate":tempPayload?.flight?.iaoAdvisedGate,
                "iaoOldGate":tempPayload?.flight?.iaoOldGate,
                "widgetConversationId":widgetData?.widgetConversationId,
                "status":"Published"
            }))
        },
        handleOverrideAction:function(){
            dispatch(flightCardViewAction.widgetUpdate({
                "eventTimeUTC":new Date().toISOString(),
                "iaoAdvisedGate":tempPayload?.flight?.iaoAdvisedGate,
                "iaoOldGate":tempPayload?.flight?.iaoOldGate,
                "widgetConversationId":widgetData?.widgetConversationId,
                "status":"override"
            }))
        },
        handleInitiateTowingAction:function(){
            alert(widgetData?.widgetConversationId)
            alert('InitiateTow')
        },
        handleUnfreezeAction:function(){
            alert(widgetData?.widgetConversationId)
            alert('Unfreeze')
        }
    }
    return (
        <div className='twin-btn' style={{...styles,...{zIndex:1,cursor:'pointer'}}} onClick={()=> action && events[action]()}>{title}</div>
    )
}
export default TwinButton
