 yield takeLatest("INSERT_MGT_DATA", insertMgtData)
  yield takeLatest("UPDATE_MGT_DATA", updateMgt)
  yield takeLatest('RETRIEVE_AIRPORT_DATA', getRetrievedAirportData)
  yield takeLatest('INSERT_AIRPORT_DATA', insertAirportData)
  yield takeLatest("UPDATE_AIRPORT_DATA", updateAirportData)
  yield takeLatest("MARK_CRITICAL", markCritical)
  yield takeLatest("REMOVE_CRITICAL", removeCritical)
  yield takeLatest("RETRIEVE_PAX_MCT", retrievePaxMctData)
  yield takeLatest("RETRIEVE_CREW_MCT", retrieveCrewMctData)
  yield takeLatest("INSERT_PAX_DATA", insertPaxData)
  yield takeLatest("INSERT_CREW_DATA", insertCrewData)
  yield takeLatest("UPDATE_CREW_DATA", updateCrewData)
  yield takeLatest("UPDATE_PAX_DATA", updatePaxData)
  yield takeLatest("DELETE_MGT_DATA", deleteMgtData)
  yield takeLatest("DELETE_AIRPORT_DATA",deleteAirportData)
  yield takeLatest("DELETE_PAX_DATA",deletePaxData)
  yield takeLatest("DELETE_CREW_DATA",deleteCrewData)



 test('should listen for RETRIEVE_MGT_DATA', () => {
        expect(generator.next().value).toEqual(takeLatest("RETRIEVE_MGT_DATA", sagas.getRetrievedMgtData));
    });
