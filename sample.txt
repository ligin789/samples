import Tippy from "@tippyjs/react";
import RunwayHoverPopup from "../../runwayHoverPopup";
import { useState } from "react";

const RenderRunwayCell = (props: any) => {
    const [visible, setVisible] = useState(false)
    if (props.value === "—" || !props.value) {
        return <span>{"—"}</span>;
    }
    if (props.data['arrrwy'].color) {
        return (
            <Tippy
                content={(<RunwayHoverPopup />)}
                visible={visible}
                allowHTML={true}
                arrow={false}
                appendTo={document.body}
                interactive={true}
                placement='bottom'
            >
                <div style={{ cursor: 'pointer' }} onClick={props.handleRunwayClick} onMouseEnter={(e: any) => setVisible(true)} onMouseLeave={() => setVisible(false)}>
                    <span>{props?.value}</span>
                </div>
            </Tippy>
        )
    }
    return (
        <span>{props?.value}</span>
    )
}

export default RenderRunwayCell


import Tippy from "@tippyjs/react";
import PetdHoverPopup from "../../petdHoverPopup";
import { useState } from "react";
import moment from "moment";
import PetaHoverPopup from "../../petaHoverPopup";

const RenderPeta = (props: any) => {
    const { isUTCToggled } = props
    const [visible, setVisible] = useState(false)
    if (props.value === "—" || !props.value) {
        return <span>{"—"}</span>;
    }
    if (props.data["flightob"].value.startsWith('223')) {
        return (
            <Tippy
                content={(
                    <PetaHoverPopup />
                )}
                visible={visible}
                allowHTML={true}
                arrow={false}
                appendTo={document.body}
                interactive={true}
                placement='bottom'
            >
                <div style={{ cursor: 'pointer' }} onMouseEnter={(e: any) => {setVisible(true)}} onMouseLeave={(e: any) => {setVisible(false)}}>
                    <span>{moment.utc(props.value).format('HH:mm')}</span>
                </div>
            </Tippy>
        )
    }
    return <span>{moment.utc(props.value).format('HH:mm')}</span>
}

export default RenderPeta
